[{"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/index.js":"1","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/reportWebVitals.js":"2","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/App.js":"3","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRooms/ChatRooms.js":"4","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Sign/Sign.js":"5","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/Login.js":"6","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatRoom.js":"7","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/cookie.js":"8"},{"size":505,"mtime":1650102695497,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1650102695497,"results":"11","hashOfConfig":"10"},{"size":904,"mtime":1650102695393,"results":"12","hashOfConfig":"10"},{"size":1182,"mtime":1650102695394,"results":"13","hashOfConfig":"10"},{"size":3292,"mtime":1650105266308,"results":"14","hashOfConfig":"10"},{"size":2390,"mtime":1650102695437,"results":"15","hashOfConfig":"10"},{"size":14530,"mtime":1650102695394,"results":"16","hashOfConfig":"10"},{"size":658,"mtime":1650102695437,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nmmsgo",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/index.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/reportWebVitals.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/App.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRooms/ChatRooms.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Sign/Sign.js",["37"],"import { Input, Button, message } from 'antd'\nimport React from 'react'\nimport { API } from '../../App'\nimport { setCookie } from '../Login/cookie'\n\nimport './Sign.css'\n\nvar Sign = () =>{\n    \n    var [Username, setUsername] = React.useState()\n    var [SignPassword, setSignPassword] = React.useState()\n    var [SignPasswordConfir, setSignPasswordConfir] = React.useState()\n\n    const sign = () =>{\n        if(SignPassword===SignPasswordConfir){\n            let bodydata = {\n                name: Username,\n                password: SignPassword,\n            }\n            setCookie(\"update\",new Date().toUTCString())\n            fetch(`/user/register/?`,{\n                method:'POST',\n                body: JSON.stringify(bodydata),\n            })\n            .then(response=>{\n                if (response.status===200) {\n                    message.success(\"成功注册，正在生成验证邮件\")\n                }else if (response.status===429) {\n\n                }else if (response.status===403){\n                    message.info(\"邮箱已被注册！\")\n                }\n                else{\n                    message.warn(\"发生了未知错误，请稍后再重试！\")\n                }\n            })\n        }\n        else{\n            message.warn(\"Inconsistent Password!\")\n            setTimeout(() => {\n                window.location.reload()\n            }, 2000);\n        }\n    }\n\n    return(\n        <div className='Sign'>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n                <div style={{\n                    \"fontSize\":\"calc(4vh + 25px)\", color:\"white\", fontFamily:\"Georgia\",\n                    marginTop:\"10vh\"\n                }}>Sign up</div>\n                <div>\n                    <form className='Sign-form'>\n                        <div className='Sign-form-username'>\n                            <div style={{textAlign:\"left\"}}>Username</div>\n                            <Input style={{\"height\":\"2rem\"}} id='username' type=\"text\" value={Username} onChange={e=>setUsername(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-password'>\n                            <div style={{textAlign:\"left\"}}>Password</div>\n                            <Input style={{\"height\":\"2rem\"}} id='password' type=\"password\" value={SignPassword} onChange={e=>setSignPassword(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-passwordConfir'>\n                            <div style={{textAlign:\"left\"}}>Confirm Password</div>\n                            <Input style={{\"height\":\"2rem\"}} id='passwordConfir' type=\"password\" value={SignPasswordConfir} onChange={e=>setSignPasswordConfir(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-submit'>\n                            <Button style={{cursor:\"pointer\"}} id='submit' type=\"button\" onClick={sign}>Sign up</Button>\n                        </div>\n                        <div className='Sign-Sign-in'>\n                            Or <a href=\"/login\" style={{color:\"blueviolet\"}}><u>Sign in ChatVerse</u></a>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Sign","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/Login.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatRoom.js",["38","39","40","41"],"// import logo from './logo.svg';\n// import { Face, Pose, Hand } from \"kalidokit\";\nimport React from 'react';\nimport { Holistic } from \"@mediapipe/holistic\"\nimport { Camera } from \"@mediapipe/camera_utils\"\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { VRM, VRMSchema, VRMUtils } from '@pixiv/three-vrm';\nimport * as THREE from 'three';\nimport * as Kalidokit from \"kalidokit\";\n\nvar currentVrm;\nvar oldLookTarget = new THREE.Euler();\nconst clock = new THREE.Clock();\nconst renderer =  new THREE.WebGLRenderer({alpha:true});\nvar orbitCamera;\nvar orbitControls\n\nfunction ChatRoom() {\n\n    /* State Defnewion */\n    const [ videoElement, setVideoElement ] = React.useState(null);\n    const [ camera, setCamera ] = React.useState(null)\n    const [ holistic, setHolistic ] = React.useState(null)\n    const [ loader, setLoader ] = React.useState(null)\n    const [ scene, setScene ] = React.useState(null)\n\n    \n    /* Initalizing Functions */\n\n    const newVideoElement = () => setVideoElement(document.querySelector(\".input_video\"));\n\n    const newHolistic = () =>{\n        setHolistic(new Holistic({\n            locateFile: file => {\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/holistic@0.5.1635989137/${file}`;\n            }\n        }))\n    }\n\n    const initHolistic = () => {\n        holistic.setOptions({\n            modelComplexity: 1,\n            smoothLandmarks: true,\n            minDetectionConfidence: 0.7,\n            minTrackingConfidence: 0.7,\n            refineFaceLandmarks: true,\n        });\n\n        holistic.onResults(onResults);\n    }\n\n    const newLoader = () => {\n        const _loader = new GLTFLoader();\n        _loader.crossOrigin = \"anonymous\";\n        // Import model from URL, add your own model here\n        setLoader(_loader)\n    }\n\n    const newCamera = () => setCamera(new Camera(videoElement, {\n        onFrame: async () => {\n            await holistic.send({image: videoElement});\n        },\n        width: 640,\n        height: 480\n    }))\n\n    const newScene = () => {\n        setScene( new THREE.Scene() )\n    }\n\n    const newLight = () => {\n        const light = new THREE.DirectionalLight(0xffffff);\n        light.position.set(1.0, 1.0, 1.0).normalize();\n        scene.add(light);\n    }\n\n    const initRenderingPipeline = () => {\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        document.body.appendChild(renderer.domElement);\n\n        orbitCamera = new THREE.PerspectiveCamera(35,window.innerWidth / window.innerHeight,0.1,1000);\n        orbitCamera.position.set(0.0, 1.4, 0.7);\n\n        orbitControls = new OrbitControls(orbitCamera, renderer.domElement);\n        orbitControls.screenSpacePanning = true;\n        orbitControls.target.set(0.0, 1.4, 0.0);\n        orbitControls.update();\n    }\n\n\n\n\n    /* Logic Functions */\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const loadVRM = () => {\n        loader.load(\n            \"https://cdn.glitch.com/29e07830-2317-4b15-a044-135e73c7f840%2FAshtra.vrm?v=1630342336981\",\n    \n            gltf => {\n                VRMUtils.removeUnnecessaryJoints(gltf.scene);\n    \n                VRM.from(gltf).then(vrm => {\n                    scene.add(vrm.scene);\n                    currentVrm = vrm\n                    // setCurrentVrm(vrm);\n                    currentVrm.scene.rotation.y = Math.PI; // Rotate model 180deg to face camera\n                    console.log(\"DEBUG 2\")\n                });\n            },\n    \n            progress =>\n                console.log(\n                    \"Loading model...\",\n                    100.0 * (progress.loaded / progress.total),\n                    \"%\"\n                ),\n    \n            error => console.error(error)\n        );\n    }\n\n\n    const rigRotation = (\n        name,\n        rotation = { x: 0, y: 0, z: 0 },\n        dampener = 1,\n        lerpAmount = 0.3\n    ) => {\n        if (!currentVrm) {return}\n        const Part = currentVrm.humanoid.getBoneNode(\n            VRMSchema.HumanoidBoneName[name]\n        );\n        if (!Part) {return}\n        \n        let euler = new THREE.Euler(\n            rotation.x * dampener,\n            rotation.y * dampener,\n            rotation.z * dampener\n        );\n        let quaternion = new THREE.Quaternion().setFromEuler(euler);\n        Part.quaternion.slerp(quaternion, lerpAmount); // interpolate\n    };\n\n    // Animate Position Helper Function\n    const rigPosition = (\n        name,\n        position = { x: 0, y: 0, z: 0 },\n        dampener = 1,\n        lerpAmount = 0.3\n    ) => {\n        if (!currentVrm) {return}\n        const Part = currentVrm.humanoid.getBoneNode(\n        VRMSchema.HumanoidBoneName[name]\n        );\n        if (!Part) {return}\n        let vector = new THREE.Vector3(\n            position.x * dampener,\n            position.y * dampener,\n            position.z * dampener\n        );\n        Part.position.lerp(vector, lerpAmount); // interpolate\n    };\n\n\n\n    const rigFace = (riggedFace) => {\n\n        // Renaming sime useful functions for easy use.\n        const remap = Kalidokit.Utils.remap;\n        const clamp = Kalidokit.Utils.clamp;\n        const lerp = Kalidokit.Vector.lerp;\n\n        if(!currentVrm){return}\n        rigRotation(\"Neck\", riggedFace.head, 0.7);\n    \n        // Blendshapes and Preset Name Schema\n        const Blendshape = currentVrm.blendShapeProxy;\n        const PresetName = VRMSchema.BlendShapePresetName;\n      \n        // Simple example without winking. Interpolate based on old blendshape, then stabilize blink with `Kalidokit` helper function.\n        // for VRM, 1 is closed, 0 is open.\n        riggedFace.eye.l = lerp(clamp(1 - riggedFace.eye.l, 0, 1),Blendshape.getValue(PresetName.Blink), .5)\n        riggedFace.eye.r = lerp(clamp(1 - riggedFace.eye.r, 0, 1),Blendshape.getValue(PresetName.Blink), .5)\n        riggedFace.eye = Kalidokit.Face.stabilizeBlink(riggedFace.eye,riggedFace.head.y)\n        Blendshape.setValue(PresetName.Blink, riggedFace.eye.l);\n        \n        // Interpolate and set mouth blendshapes\n        Blendshape.setValue(PresetName.I, lerp(riggedFace.mouth.shape.I,Blendshape.getValue(PresetName.I), .5));\n        Blendshape.setValue(PresetName.A, lerp(riggedFace.mouth.shape.A,Blendshape.getValue(PresetName.A), .5));\n        Blendshape.setValue(PresetName.E, lerp(riggedFace.mouth.shape.E,Blendshape.getValue(PresetName.E), .5));\n        Blendshape.setValue(PresetName.O, lerp(riggedFace.mouth.shape.O,Blendshape.getValue(PresetName.O), .5));\n        Blendshape.setValue(PresetName.U, lerp(riggedFace.mouth.shape.U,Blendshape.getValue(PresetName.U), .5));\n    \n        //PUPILS\n        //interpolate pupil and keep a copy of the value\n        let lookTarget =\n          new THREE.Euler(\n            lerp(oldLookTarget.x , riggedFace.pupil.y, .4),\n            lerp(oldLookTarget.y, riggedFace.pupil.x, .4),\n            0,\n            \"XYZ\"\n          )\n        oldLookTarget.copy(lookTarget)\n        currentVrm.lookAt.applyer.lookAt(lookTarget);\n    }\n\n    \n\n\n    const onResults = (results) => {\n        // Animate model\n        var vrm = currentVrm;\n        if (!vrm) return;\n\n        // Take the results from `Holistic` and animate character based on its Face, Pose, and Hand Keypoints.\n        let riggedPose, riggedLeftHand, riggedRightHand, riggedFace;\n    \n        const faceLandmarks = results.faceLandmarks;\n        // Pose 3D Landmarks are with respect to Hip distance in meters\n        const pose3DLandmarks = results.ea;\n        // Pose 2D landmarks are with respect to videoWidth and videoHeight\n        const pose2DLandmarks = results.poseLandmarks;\n        // Be careful, hand landmarks may be reversed\n        const leftHandLandmarks = results.rightHandLandmarks;\n        const rightHandLandmarks = results.leftHandLandmarks;\n    \n        // Animate Face\n        if (faceLandmarks) {\n            riggedFace = Kalidokit.Face.solve(faceLandmarks,{\n                runtime:\"mediapipe\",\n                video:videoElement\n            });\n\n            console.log(riggedFace)\n            rigFace(riggedFace)\n        }\n        \n            // Animate Pose\n        if (pose2DLandmarks && pose3DLandmarks) {\n            riggedPose = Kalidokit.Pose.solve(pose3DLandmarks, pose2DLandmarks, {\n                runtime: \"mediapipe\",\n                video:videoElement,\n            });\n            rigRotation(\"Hips\", riggedPose.Hips.rotation, 0.7);\n            rigPosition(\n                \"Hips\",\n                {\n                    x: -riggedPose.Hips.position.x, // Reverse direction\n                    y: riggedPose.Hips.position.y + 1, // Add a bit of height\n                    z: -riggedPose.Hips.position.z // Reverse direction\n                },\n                1,\n                0.07\n            );\n        \n            rigRotation(\"Chest\", riggedPose.Spine, 0.25, .3);\n            rigRotation(\"Spine\", riggedPose.Spine, 0.45, .3);\n        \n            rigRotation(\"RightUpperArm\", riggedPose.RightUpperArm, 1, .3);\n            rigRotation(\"RightLowerArm\", riggedPose.RightLowerArm, 1, .3);\n            rigRotation(\"LeftUpperArm\", riggedPose.LeftUpperArm, 1, .3);\n            rigRotation(\"LeftLowerArm\", riggedPose.LeftLowerArm, 1, .3);\n        \n            rigRotation(\"LeftUpperLeg\", riggedPose.LeftUpperLeg, 1, .3);\n            rigRotation(\"LeftLowerLeg\", riggedPose.LeftLowerLeg, 1, .3);\n            rigRotation(\"RightUpperLeg\", riggedPose.RightUpperLeg, 1, .3);\n            rigRotation(\"RightLowerLeg\", riggedPose.RightLowerLeg, 1, .3);\n        }\n        \n            // Animate Hands\n        if (leftHandLandmarks) {\n            riggedLeftHand = Kalidokit.Hand.solve(leftHandLandmarks, \"Left\");\n            rigRotation(\"LeftHand\", {\n                // Combine pose rotation Z and hand rotation X Y\n                z: riggedPose.LeftHand.z,\n                y: riggedLeftHand.LeftWrist.y,\n                x: riggedLeftHand.LeftWrist.x\n            });\n            rigRotation(\"LeftRingProximal\", riggedLeftHand.LeftRingProximal);\n            rigRotation(\"LeftRingIntermediate\", riggedLeftHand.LeftRingIntermediate);\n            rigRotation(\"LeftRingDistal\", riggedLeftHand.LeftRingDistal);\n            rigRotation(\"LeftIndexProximal\", riggedLeftHand.LeftIndexProximal);\n            rigRotation(\"LeftIndexIntermediate\", riggedLeftHand.LeftIndexIntermediate);\n            rigRotation(\"LeftIndexDistal\", riggedLeftHand.LeftIndexDistal);\n            rigRotation(\"LeftMiddleProximal\", riggedLeftHand.LeftMiddleProximal);\n            rigRotation(\"LeftMiddleIntermediate\", riggedLeftHand.LeftMiddleIntermediate);\n            rigRotation(\"LeftMiddleDistal\", riggedLeftHand.LeftMiddleDistal);\n            rigRotation(\"LeftThumbProximal\", riggedLeftHand.LeftThumbProximal);\n            rigRotation(\"LeftThumbIntermediate\", riggedLeftHand.LeftThumbIntermediate);\n            rigRotation(\"LeftThumbDistal\", riggedLeftHand.LeftThumbDistal);\n            rigRotation(\"LeftLittleProximal\", riggedLeftHand.LeftLittleProximal);\n            rigRotation(\"LeftLittleIntermediate\", riggedLeftHand.LeftLittleIntermediate);\n            rigRotation(\"LeftLittleDistal\", riggedLeftHand.LeftLittleDistal);\n        }\n            \n        if (rightHandLandmarks) {\n            riggedRightHand = Kalidokit.Hand.solve(rightHandLandmarks, \"Right\");\n            rigRotation(\"RightHand\", {\n                // Combine Z axis from pose hand and X/Y axis from hand wrist rotation\n                z: riggedPose.RightHand.z,\n                y: riggedRightHand.RightWrist.y,\n                x: riggedRightHand.RightWrist.x\n            });\n            rigRotation(\"RightRingProximal\", riggedRightHand.RightRingProximal);\n            rigRotation(\"RightRingIntermediate\", riggedRightHand.RightRingIntermediate);\n            rigRotation(\"RightRingDistal\", riggedRightHand.RightRingDistal);\n            rigRotation(\"RightIndexProximal\", riggedRightHand.RightIndexProximal);\n            rigRotation(\"RightIndexIntermediate\",riggedRightHand.RightIndexIntermediate);\n            rigRotation(\"RightIndexDistal\", riggedRightHand.RightIndexDistal);\n            rigRotation(\"RightMiddleProximal\", riggedRightHand.RightMiddleProximal);\n            rigRotation(\"RightMiddleIntermediate\", riggedRightHand.RightMiddleIntermediate);\n            rigRotation(\"RightMiddleDistal\", riggedRightHand.RightMiddleDistal);\n            rigRotation(\"RightThumbProximal\", riggedRightHand.RightThumbProximal);\n            rigRotation(\"RightThumbIntermediate\", riggedRightHand.RightThumbIntermediate);\n            rigRotation(\"RightThumbDistal\", riggedRightHand.RightThumbDistal);\n            rigRotation(\"RightLittleProximal\", riggedRightHand.RightLittleProximal);\n            rigRotation(\"RightLittleIntermediate\", riggedRightHand.RightLittleIntermediate);\n            rigRotation(\"RightLittleDistal\", riggedRightHand.RightLittleDistal);\n        }\n    }\n\n\n    /* Animation Related Functions */\n    function animate() {\n        requestAnimationFrame(animate);\n      \n        if (currentVrm) {\n          // Update model to render physics\n          currentVrm.update(clock.getDelta());\n        }\n        renderer.render(scene, orbitCamera);\n    }\n    \n\n\n\n    /* Lifecycle Hooks */\n\n    // Init HTML element reference and some mudules\n    React.useEffect(()=>{\n        newVideoElement()\n        newHolistic()\n        newLoader()\n        newScene()\n        initRenderingPipeline()\n    },[])\n\n    // When videoElement is found, new \"@mediapipe/camera_utils\".Camera\n    React.useEffect(()=>{\n        if(videoElement) newCamera()\n    },[videoElement])\n\n    // When Camera is Ready, start it.\n    React.useEffect(()=>{\n        if(camera) camera.start();\n    },[camera])\n\n\n    React.useEffect(()=>{\n        if(loader && scene) loadVRM();    \n    },[loadVRM, loader, scene])\n\n    React.useEffect(()=>{\n        if(scene){\n            newLight()\n            animate()\n        }\n    },[scene])\n\n    React.useEffect(()=>{\n        if(holistic) initHolistic()\n    },[holistic])\n\n    // React.useState(()=>{\n    //     console.log(\"DEBUG \",currentVrm)\n    // },[currentVrm])\n\n    return(\n        <div className='ChatRoom'>\n            <video\n                className=\"input_video\" width=\"300px\" height=\"200px\"  autoPlay muted\n                style={{\n                    position:\"absolute\",\n                    left:10,top:10,\n                }}\n            ></video>       \n        </div>\n    )\n}\n\nexport default ChatRoom","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/cookie.js",["42"],"export function setCookie(name,value)\n{\n    var Days = 30;\n    var exp = new Date();\n    exp.setTime(exp.getTime() + Days*24*60*60*1000);\n    document.cookie = name + \"=\"+ escape (value) + \";path=/;expires=\" + exp.toGMTString();\n}\n\nexport function getCookie(name)\n{\n    var arr,reg=new RegExp(\"(^| )\"+name+\"=([^;]*)(;|$)\");\n \n    if(arr=document.cookie.match(reg))\n \n        return unescape(arr[2]);\n    else\n        return null;\n}\n\nexport function delCookie(name)\n{\n    var exp = new Date();\n    exp.setTime(exp.getTime() - 1);\n    var cval=getCookie(name);\n    if(cval!=null)\n        document.cookie= name + \"=\"+cval+\";path=/;expires=\"+exp.toGMTString();\n}",{"ruleId":"43","severity":1,"message":"44","line":3,"column":10,"nodeType":"45","messageId":"46","endLine":3,"endColumn":13},{"ruleId":"43","severity":1,"message":"47","line":173,"column":15,"nodeType":"45","messageId":"46","endLine":173,"endColumn":20},{"ruleId":"48","severity":1,"message":"49","line":355,"column":7,"nodeType":"50","endLine":355,"endColumn":21,"suggestions":"51"},{"ruleId":"48","severity":1,"message":"52","line":372,"column":7,"nodeType":"50","endLine":372,"endColumn":14,"suggestions":"53"},{"ruleId":"48","severity":1,"message":"54","line":376,"column":7,"nodeType":"50","endLine":376,"endColumn":17,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":13,"column":8,"nodeType":"58","messageId":"59","endLine":13,"endColumn":38},"no-unused-vars","'API' is defined but never used.","Identifier","unusedVar","'remap' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'newCamera'. Either include it or remove the dependency array.","ArrayExpression",["60"],"React Hook React.useEffect has missing dependencies: 'animate' and 'newLight'. Either include them or remove the dependency array.",["61"],"React Hook React.useEffect has a missing dependency: 'initHolistic'. Either include it or remove the dependency array.",["62"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [newCamera, videoElement]",{"range":"69","text":"70"},"Update the dependencies array to be: [animate, newLight, scene]",{"range":"71","text":"72"},"Update the dependencies array to be: [holistic, initHolistic]",{"range":"73","text":"74"},[13652,13666],"[newCamera, videoElement]",[13995,14002],"[animate, newLight, scene]",[14073,14083],"[holistic, initHolistic]"]
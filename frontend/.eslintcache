[{"C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\index.js":"1","C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\app\\App.js":"3","C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\app\\components\\ChatRooms\\ChatRooms.js":"4","C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\app\\components\\ChatRoom\\ChatRoom.js":"5","C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\app\\components\\Login\\Login.js":"6","C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\app\\components\\Sign\\Sign.js":"7","C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\app\\components\\ChatRoom\\ChatBar.js":"8","C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\app\\components\\Login\\cookie.js":"9"},{"size":523,"mtime":1650109030800,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1650109030801,"results":"12","hashOfConfig":"11"},{"size":936,"mtime":1650109030602,"results":"13","hashOfConfig":"11"},{"size":5393,"mtime":1650203505177,"results":"14","hashOfConfig":"11"},{"size":20801,"mtime":1650202795747,"results":"15","hashOfConfig":"11"},{"size":2881,"mtime":1650203505179,"results":"16","hashOfConfig":"11"},{"size":3533,"mtime":1650203505180,"results":"17","hashOfConfig":"11"},{"size":3041,"mtime":1650201344134,"results":"18","hashOfConfig":"11"},{"size":684,"mtime":1650109030672,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ixzcu2",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\index.js",[],["42","43"],"C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\app\\App.js",[],"C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\app\\components\\ChatRooms\\ChatRooms.js",["44","45"],"C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\app\\components\\ChatRoom\\ChatRoom.js",["46","47","48","49","50","51","52","53","54","55"],"// import logo from './logo.svg';\r\n// import { Face, Pose, Hand } from \"kalidokit\";\r\nimport React from 'react';\r\nimport { Holistic } from \"@mediapipe/holistic\"\r\nimport { Camera } from \"@mediapipe/camera_utils\"\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { VRM, VRMSchema, VRMUtils } from '@pixiv/three-vrm';\r\nimport * as THREE from 'three';\r\nimport * as Kalidokit from \"kalidokit\";\r\nimport ChatBar from './ChatBar';\r\n\r\nvar VRMs = [];\r\nvar transforms = [];\r\nvar uids = []\r\n\r\nconst theta = 2*Math.PI/9;\r\n\r\nvar uids_loading = [] // 用于记录正在下载VRM的玩家，避免重复下载\r\n\r\nvar oldLookTarget = new THREE.Euler();\r\nconst clock = new THREE.Clock();\r\nconst renderer =  new THREE.WebGLRenderer({alpha:true});\r\nvar orbitCamera;\r\nvar orbitControls\r\n\r\nvar motion_socket = null;\r\nvar uid;\r\nvar my_idx = -1;\r\n\r\nfunction ChatRoom() {\r\n\r\n    /* State Defnewion */\r\n    const [ videoElement, setVideoElement ] = React.useState(null);\r\n    const [ camera, setCamera ] = React.useState(null)\r\n    const [ holistic, setHolistic ] = React.useState(null)\r\n    const [ scene, setScene ] = React.useState(null)\r\n\r\n    \r\n    /* Initalizing Functions */\r\n\r\n    const getUid = () => {\r\n        // 从 URL Params 获取 roon name\r\n        const queryString = window.location.search;\r\n        const urlParams = new URLSearchParams(queryString);\r\n        uid = urlParams.get('uid');\r\n    }\r\n\r\n    const newVideoElement = () => setVideoElement(document.querySelector(\".input_video\"));\r\n\r\n    const newHolistic = () =>{\r\n        setHolistic(new Holistic({\r\n            locateFile: file => {\r\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/holistic@0.5.1635989137/${file}`;\r\n            }\r\n        }))\r\n    }\r\n\r\n    const initHolistic = () => {\r\n        holistic.setOptions({\r\n            modelComplexity: 1,\r\n            smoothLandmarks: true,\r\n            minDetectionConfidence: 0.7,\r\n            minTrackingConfidence: 0.7,\r\n            refineFaceLandmarks: true,\r\n        });\r\n        holistic.onResults(onResults);\r\n    }\r\n\r\n    const newCamera = () => setCamera(new Camera(videoElement, {\r\n        onFrame: async () => {\r\n            await holistic.send({image: videoElement});\r\n        },\r\n        width: 640,\r\n        height: 480\r\n    }))\r\n\r\n    const newScene = () => {\r\n        setScene( new THREE.Scene() )\r\n    }\r\n\r\n    const newLight = () => {\r\n        const light = new THREE.DirectionalLight(0xffffff);\r\n        light.position.set(1.0, 1.0, 1.0).normalize();\r\n        scene.add(light);\r\n    }\r\n\r\n    const initRenderingPipeline = () => {\r\n\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n        document.body.appendChild(renderer.domElement);\r\n\r\n        // 下面这行可以禁用THREE的交互\r\n        // renderer.domElement.style.pointerEvents = \"none\" \r\n        orbitCamera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n        orbitCamera.position.set(0.0, 1.4, 0.7);\r\n\r\n        orbitControls = new OrbitControls(orbitCamera, renderer.domElement);\r\n        orbitControls.screenSpacePanning = true;\r\n        orbitControls.target.set(0.0, 1.4, 0.0);\r\n        orbitControls.update();\r\n    }\r\n\r\n\r\n\r\n\r\n    /* Logic Functions */\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const loadVRM = (_uid) => {\r\n\r\n        if(!scene) { console.log(\"No scene, return\");return}\r\n\r\n        uids_loading.push(_uid)\r\n\r\n        const loader = new GLTFLoader();\r\n        loader.crossOrigin = \"anonymous\";\r\n\r\n        // TODO: 不同的UID从不同的URL获取\r\n        // 需要查询Avatar数据库\r\n        loader.load(\r\n            \"https://cdn.glitch.com/29e07830-2317-4b15-a044-135e73c7f840%2FAshtra.vrm?v=1630342336981\",\r\n    \r\n            gltf => {\r\n                VRMUtils.removeUnnecessaryJoints(gltf.scene);\r\n    \r\n                VRM.from(gltf).then(vrm => {\r\n                    let idx = VRMs.length\r\n                    scene.add(vrm.scene);\r\n                    VRMs[idx] = vrm\r\n                    uids[idx] = _uid\r\n                    if(toString(_uid)===toString(uid)){\r\n                        my_idx=idx\r\n                        initControl()\r\n                    }\r\n                    console.log(\"Loaded a new player\",uid, idx)\r\n                    uids_loading.splice(uids_loading.indexOf(uid),1)\r\n                });\r\n                \r\n            },\r\n    \r\n            progress =>\r\n                // console.log(\r\n                //     \"Loading model...\",\r\n                //     100.0 * (progress.loaded / progress.total),\r\n                //     \"%\"\r\n                // ),\r\n    \r\n            error => {\r\n                console.error(error)\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    /* SHOULD DEBUG */\r\n    // 不想思考角度换算了，谁来思考一下\r\n    const initControl = () => {\r\n\r\n        if(my_idx!==undefined){\r\n\r\n            transforms[my_idx] = {x:0, z:0, r:0}\r\n\r\n            document.addEventListener('keypress', e=>{\r\n                if(transforms[my_idx]){\r\n                    var e = e || window.event;\r\n                    if(e.key == 'w'){\r\n                        transforms[my_idx].x -= 0.1 * Math.sin(transforms[my_idx].r*theta)\r\n                        transforms[my_idx].z -= 0.1 * Math.cos(transforms[my_idx].r*theta)\r\n                        orbitControls.target.set(\r\n                            transforms[my_idx].x,\r\n                            1.4,\r\n                            transforms[my_idx].z\r\n                        )\r\n                        orbitCamera.position.set(\r\n                            -0.1 * Math.sin(transforms[my_idx].r*theta) + orbitCamera.position.x,\r\n                            orbitCamera.position.y,\r\n                            -0.1 * Math.cos(transforms[my_idx].r*theta) + orbitCamera.position.z\r\n                        )\r\n                    }\r\n                    if(e.key == 's'){\t\r\n                        transforms[my_idx].x += 0.1 * Math.sin(transforms[my_idx].r*theta)\r\n                        transforms[my_idx].z += 0.1 * Math.cos(transforms[my_idx].r*theta)\r\n                        orbitControls.target.set(\r\n                            transforms[my_idx].x,\r\n                            1.4,\r\n                            transforms[my_idx].z\r\n                        )\r\n                        orbitCamera.position.set(\r\n                            -0.1 * Math.sin(transforms[my_idx].r*theta) + orbitCamera.position.x,\r\n                            orbitCamera.position.y,\r\n                            -0.1 * Math.cos(transforms[my_idx].r*theta) + orbitCamera.position.z\r\n                        )\r\n                    }\r\n                    if(e.key == 'a'){\r\n                        transforms[my_idx].r += 0.3\r\n                    }\r\n                    if(e.key == 'd'){\t\r\n                        transforms[my_idx].r -= 0.3\r\n                    }\r\n                }\r\n            }) \r\n        }\r\n    }\r\n\r\n\r\n    const rigRotation = (\r\n        idx,\r\n        name,\r\n        rotation = { x: 0, y: 0, z: 0 },\r\n        dampener = 1,\r\n        lerpAmount = 0.3\r\n    ) => {\r\n        let currentVrm = VRMs[idx]\r\n        if (!currentVrm) {return}\r\n        const Part = currentVrm.humanoid.getBoneNode(\r\n            VRMSchema.HumanoidBoneName[name]\r\n        );\r\n        if (!Part) {return}\r\n\r\n        \r\n        let euler = new THREE.Euler(\r\n            rotation.x * dampener,\r\n            rotation.y * dampener,\r\n            rotation.z * dampener\r\n        );\r\n        let quaternion = new THREE.Quaternion().setFromEuler(euler);\r\n        Part.quaternion.slerp(quaternion, lerpAmount); // interpolate\r\n    };\r\n\r\n    // Animate Position Helper Function\r\n    const rigPosition = (\r\n        idx,\r\n        name,\r\n        position = { x: 0, y: 0, z: 0 },\r\n        dampener = 1,\r\n        lerpAmount = 0.3\r\n    ) => {\r\n        let currentVrm = VRMs[idx]\r\n        if (!currentVrm) {return}\r\n        const Part = currentVrm.humanoid.getBoneNode(\r\n        VRMSchema.HumanoidBoneName[name]\r\n        );\r\n        if (!Part) {return}\r\n        let vector = new THREE.Vector3(\r\n            position.x * dampener,\r\n            position.y * dampener,\r\n            position.z * dampener\r\n        );\r\n        Part.position.lerp(vector, lerpAmount); // interpolate\r\n    };\r\n\r\n    const rigFace = (idx, riggedFace) => {\r\n\r\n        let currentVrm = VRMs[idx]\r\n\r\n        // Renaming sime useful functions for easy use.\r\n        const remap = Kalidokit.Utils.remap;\r\n        const clamp = Kalidokit.Utils.clamp;\r\n        const lerp = Kalidokit.Vector.lerp;\r\n\r\n        \r\n\r\n        if(!currentVrm){return}\r\n        rigRotation(idx, \"Neck\", riggedFace.head, 0.7);\r\n    \r\n        // Blendshapes and Preset Name Schema\r\n        const Blendshape = currentVrm.blendShapeProxy;\r\n        const PresetName = VRMSchema.BlendShapePresetName;\r\n      \r\n        // Simple example without winking. Interpolate based on old blendshape, then stabilize blink with `Kalidokit` helper function.\r\n        // for VRM, 1 is closed, 0 is open.\r\n        riggedFace.eye.l = lerp(clamp(1 - riggedFace.eye.l, 0, 1),Blendshape.getValue(PresetName.Blink), .5)\r\n        riggedFace.eye.r = lerp(clamp(1 - riggedFace.eye.r, 0, 1),Blendshape.getValue(PresetName.Blink), .5)\r\n        riggedFace.eye = Kalidokit.Face.stabilizeBlink(riggedFace.eye,riggedFace.head.y)\r\n        Blendshape.setValue(PresetName.Blink, riggedFace.eye.l);\r\n        \r\n        // Interpolate and set mouth blendshapes\r\n        Blendshape.setValue(PresetName.I, lerp(riggedFace.mouth.shape.I,Blendshape.getValue(PresetName.I), .5));\r\n        Blendshape.setValue(PresetName.A, lerp(riggedFace.mouth.shape.A,Blendshape.getValue(PresetName.A), .5));\r\n        Blendshape.setValue(PresetName.E, lerp(riggedFace.mouth.shape.E,Blendshape.getValue(PresetName.E), .5));\r\n        Blendshape.setValue(PresetName.O, lerp(riggedFace.mouth.shape.O,Blendshape.getValue(PresetName.O), .5));\r\n        Blendshape.setValue(PresetName.U, lerp(riggedFace.mouth.shape.U,Blendshape.getValue(PresetName.U), .5));\r\n    \r\n        //PUPILS\r\n        //interpolate pupil and keep a copy of the value\r\n        let lookTarget =\r\n          new THREE.Euler(\r\n            lerp(oldLookTarget.x , riggedFace.pupil.y, .4),\r\n            lerp(oldLookTarget.y, riggedFace.pupil.x, .4),\r\n            0,\r\n            \"XYZ\"\r\n          )\r\n        oldLookTarget.copy(lookTarget)\r\n        currentVrm.lookAt.applyer.lookAt(lookTarget);\r\n    }\r\n\r\n    const onResults = (results) => {\r\n        // Animate model\r\n        if (!VRMs[my_idx]) return;\r\n\r\n        // Take the results from `Holistic` and animate character based on its Face, Pose, and Hand Keypoints.\r\n        let riggedPose, riggedLeftHand, riggedRightHand, riggedFace;\r\n    \r\n        const faceLandmarks = results.faceLandmarks;\r\n        // Pose 3D Landmarks are with respect to Hip distance in meters\r\n        const pose3DLandmarks = results.ea;\r\n        // Pose 2D landmarks are with respect to videoWidth and videoHeight\r\n        const pose2DLandmarks = results.poseLandmarks;\r\n        // Be careful, hand landmarks may be reversed\r\n        const leftHandLandmarks = results.rightHandLandmarks;\r\n        const rightHandLandmarks = results.leftHandLandmarks;\r\n        \r\n\r\n        // Animate Face\r\n        if (faceLandmarks) {\r\n            riggedFace = Kalidokit.Face.solve(faceLandmarks,{\r\n                runtime:\"mediapipe\",\r\n                video:videoElement\r\n            });\r\n        }\r\n\r\n        \r\n        \r\n        // Animate Pose\r\n        if (pose2DLandmarks && pose3DLandmarks) {\r\n            riggedPose = Kalidokit.Pose.solve(pose3DLandmarks, pose2DLandmarks, {\r\n                runtime: \"mediapipe\",\r\n                video:videoElement,\r\n            });\r\n        }\r\n        \r\n            // Animate Hands\r\n        if (leftHandLandmarks) {\r\n            riggedLeftHand = Kalidokit.Hand.solve(leftHandLandmarks, \"Left\");\r\n        }\r\n            \r\n        if (rightHandLandmarks) {\r\n            riggedRightHand = Kalidokit.Hand.solve(rightHandLandmarks, \"Right\");\r\n        }\r\n    \r\n        \r\n        // Socket send data\r\n        let my_data = {\r\n            uid,\r\n\r\n            riggedPose,\r\n            riggedLeftHand,\r\n            riggedRightHand,\r\n            riggedFace,\r\n\r\n            transform:transforms[my_idx]\r\n        }\r\n        motion_socket.send(JSON.stringify(my_data))\r\n\r\n        // applyMovements( my_data, idx )\r\n    }\r\n\r\n    const applyMovements = ( data, idx ) => {\r\n\r\n        let {\r\n            riggedPose,\r\n            riggedLeftHand,\r\n            riggedRightHand,\r\n            riggedFace,\r\n            transform,\r\n        } = data\r\n\r\n\r\n        try{\r\n\r\n            // console.log(riggedFace)\r\n            rigFace(idx, riggedFace)\r\n        }catch{}\r\n\r\n        try{\r\n            \r\n            rigRotation(idx, \"Hips\", {...riggedPose.Hips.rotation, y: riggedPose.Hips.rotation.y + transforms[my_idx].r}, 0.7);\r\n            rigPosition(\r\n                \"Hips\",\r\n                {\r\n                    x: riggedPose.Hips.position.x,// Reverse direction\r\n                    y: riggedPose.Hips.position.y + 1, // Add a bit of height\r\n                    z: -riggedPose.Hips.position.z // Reverse direction\r\n                },\r\n                1,\r\n                0.07\r\n            );\r\n        \r\n            rigRotation(idx, \"Chest\", riggedPose.Spine, 0.25, .3);\r\n            rigRotation(idx, \"Spine\", riggedPose.Spine, 0.45, .3);\r\n        \r\n            rigRotation(idx, \"RightUpperArm\", riggedPose.RightUpperArm, 1, .3);\r\n            rigRotation(idx, \"RightLowerArm\", riggedPose.RightLowerArm, 1, .3);\r\n            rigRotation(idx, \"LeftUpperArm\", riggedPose.LeftUpperArm, 1, .3);\r\n            rigRotation(idx, \"LeftLowerArm\", riggedPose.LeftLowerArm, 1, .3);\r\n        \r\n            rigRotation(idx, \"LeftUpperLeg\", riggedPose.LeftUpperLeg, 1, .3);\r\n            rigRotation(idx, \"LeftLowerLeg\", riggedPose.LeftLowerLeg, 1, .3);\r\n            rigRotation(idx, \"RightUpperLeg\", riggedPose.RightUpperLeg, 1, .3);\r\n            rigRotation(idx, \"RightLowerLeg\", riggedPose.RightLowerLeg, 1, .3);\r\n        }catch{}\r\n\r\n\r\n        try{\r\n            rigRotation(idx, \"LeftHand\", {\r\n                // Combine pose rotation Z and hand rotation X Y\r\n                z: riggedPose.LeftHand.z,\r\n                y: riggedLeftHand.LeftWrist.y,\r\n                x: riggedLeftHand.LeftWrist.x\r\n            });\r\n            rigRotation(idx, \"LeftRingProximal\", riggedLeftHand.LeftRingProximal);\r\n            rigRotation(idx, \"LeftRingIntermediate\", riggedLeftHand.LeftRingIntermediate);\r\n            rigRotation(idx, \"LeftRingDistal\", riggedLeftHand.LeftRingDistal);\r\n            rigRotation(idx, \"LeftIndexProximal\", riggedLeftHand.LeftIndexProximal);\r\n            rigRotation(idx, \"LeftIndexIntermediate\", riggedLeftHand.LeftIndexIntermediate);\r\n            rigRotation(idx, \"LeftIndexDistal\", riggedLeftHand.LeftIndexDistal);\r\n            rigRotation(idx, \"LeftMiddleProximal\", riggedLeftHand.LeftMiddleProximal);\r\n            rigRotation(idx, \"LeftMiddleIntermediate\", riggedLeftHand.LeftMiddleIntermediate);\r\n            rigRotation(idx, \"LeftMiddleDistal\", riggedLeftHand.LeftMiddleDistal);\r\n            rigRotation(idx, \"LeftThumbProximal\", riggedLeftHand.LeftThumbProximal);\r\n            rigRotation(idx, \"LeftThumbIntermediate\", riggedLeftHand.LeftThumbIntermediate);\r\n            rigRotation(idx, \"LeftThumbDistal\", riggedLeftHand.LeftThumbDistal);\r\n            rigRotation(idx, \"LeftLittleProximal\", riggedLeftHand.LeftLittleProximal);\r\n            rigRotation(idx, \"LeftLittleIntermediate\", riggedLeftHand.LeftLittleIntermediate);\r\n            rigRotation(idx, \"LeftLittleDistal\", riggedLeftHand.LeftLittleDistal);\r\n        }catch{}\r\n\r\n        try{\r\n            rigRotation(idx, \"RightHand\", {\r\n                // Combine Z axis from pose hand and X/Y axis from hand wrist rotation\r\n                z: riggedPose.RightHand.z,\r\n                y: riggedRightHand.RightWrist.y,\r\n                x: riggedRightHand.RightWrist.x\r\n            });\r\n            rigRotation(idx, \"RightRingProximal\", riggedRightHand.RightRingProximal);\r\n            rigRotation(idx, \"RightRingIntermediate\", riggedRightHand.RightRingIntermediate);\r\n            rigRotation(idx, \"RightRingDistal\", riggedRightHand.RightRingDistal);\r\n            rigRotation(idx, \"RightIndexProximal\", riggedRightHand.RightIndexProximal);\r\n            rigRotation(idx, \"RightIndexIntermediate\",riggedRightHand.RightIndexIntermediate);\r\n            rigRotation(idx, \"RightIndexDistal\", riggedRightHand.RightIndexDistal);\r\n            rigRotation(idx, \"RightMiddleProximal\", riggedRightHand.RightMiddleProximal);\r\n            rigRotation(idx, \"RightMiddleIntermediate\", riggedRightHand.RightMiddleIntermediate);\r\n            rigRotation(idx, \"RightMiddleDistal\", riggedRightHand.RightMiddleDistal);\r\n            rigRotation(idx, \"RightThumbProximal\", riggedRightHand.RightThumbProximal);\r\n            rigRotation(idx, \"RightThumbIntermediate\", riggedRightHand.RightThumbIntermediate);\r\n            rigRotation(idx, \"RightThumbDistal\", riggedRightHand.RightThumbDistal);\r\n            rigRotation(idx, \"RightLittleProximal\", riggedRightHand.RightLittleProximal);\r\n            rigRotation(idx, \"RightLittleIntermediate\", riggedRightHand.RightLittleIntermediate);\r\n            rigRotation(idx, \"RightLittleDistal\", riggedRightHand.RightLittleDistal);\r\n        }catch{}\r\n\r\n\r\n        \r\n\r\n        // 移动角色位置\r\n        VRMs[idx].scene.position.x = transform.x\r\n        VRMs[idx].scene.position.z = transform.z\r\n    }\r\n\r\n\r\n\r\n    /* Animation Related Functions */\r\n    function animate() {\r\n        requestAnimationFrame(animate);\r\n      \r\n        VRMs.forEach(vrm=>{\r\n            if (vrm) {\r\n            // Update model to render physics\r\n            vrm.update(clock.getDelta());\r\n            }\r\n        })\r\n\r\n        renderer.render(scene, orbitCamera);\r\n    }\r\n\r\n    /* Network (Socket) */\r\n\r\n    const initSocket = () => {\r\n        // 从 URL Params 获取 roon name\r\n        const queryString = window.location.search;\r\n        const urlParams = new URLSearchParams(queryString);\r\n        const roomName = urlParams.get('roomname');\r\n        const wss_protocol = (window.location.protocol == 'https:') ? 'wss://': 'ws://';\r\n        motion_socket = new WebSocket(\r\n            wss_protocol + window.location.host + '/ws/motion/'  + roomName + '/'\r\n        );\r\n        // 建立webchat_socket连接时触发此方法\r\n        motion_socket.onopen = function(e) {\r\n            // Do nothing\r\n        }\r\n\r\n        // 从后台接收到数据时触发此方法\r\n        motion_socket.onmessage = function(e) {\r\n            const data = JSON.parse(e.data);\r\n            let {uid} = data;\r\n            let idx = uids.indexOf(uid)\r\n            if(idx>=0){\r\n                applyMovements(data, idx)\r\n            }else{\r\n                if(!(uids_loading.indexOf(uid)>=0)){\r\n                    // 收到一个未知用户的信号\r\n                    console.log(\"cannot found uid\", uid, uids_loading)\r\n                    loadVRM(uid)\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n\r\n\r\n    /* Lifecycle Hooks */\r\n\r\n    // Init HTML element reference and some mudules\r\n    React.useEffect(()=>{\r\n        getUid()\r\n        newVideoElement()\r\n        newHolistic()\r\n        newScene()\r\n        initRenderingPipeline()\r\n    },[])\r\n\r\n    // When videoElement is found, new \"@mediapipe/camera_utils\".Camera\r\n    React.useEffect(()=>{\r\n        if(videoElement) newCamera()\r\n    },[videoElement])\r\n\r\n    // When Camera is Ready, start it.\r\n    React.useEffect(()=>{\r\n        if(camera) camera.start();\r\n    },[camera])\r\n\r\n\r\n    React.useEffect(()=>{\r\n        if(scene){\r\n            newLight()\r\n            animate()\r\n            loadVRM(uid);  \r\n            initSocket()  \r\n            var axisHelper = new THREE.AxisHelper(250);\r\n            scene.add(axisHelper);\r\n            }\r\n    },[scene])\r\n\r\n    React.useEffect(()=>{\r\n        setInterval(() => {\r\n            // console.log(\"position\",orbitCamera.position)\r\n            console.log(\"target\",orbitControls.target)\r\n            console.log(\"transforms\",transforms[my_idx])\r\n        }, 500);\r\n    },[])\r\n\r\n    React.useEffect(()=>{\r\n        if(holistic) initHolistic()\r\n    },[holistic])\r\n\r\n    return(\r\n        <div className='ChatRoom'>\r\n            <video\r\n                className=\"input_video\" width=\"300px\" height=\"200px\"  autoPlay muted\r\n                style={{\r\n                    position:\"absolute\",\r\n                    left:10,top:10,\r\n                }}\r\n            ></video>  \r\n\r\n\r\n            <ChatBar />     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatRoom","C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\app\\components\\Login\\Login.js",[],"C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\app\\components\\Sign\\Sign.js",["56","57"],"C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\app\\components\\ChatRoom\\ChatBar.js",["58","59","60"],"import React, { useEffect } from \"react\";\r\nimport \"./ChatBar.css\"\r\n\r\nvar idx_max = 0\r\n\r\nvar chat_socket = null;\r\n\r\nvar timeout\r\n\r\nconst ChatBar = () => {\r\n\r\n    const [ text, setText ] = React.useState(\"\")\r\n\r\n\r\n\r\n    React.useEffect(()=>{\r\n        initSocket()\r\n    },[])\r\n\r\n    const [ messages, setMessages ] = React.useState([])\r\n\r\n    const initSocket = () => {\r\n        // 从 URL Params 获取 roon name\r\n        const queryString = window.location.search;\r\n        const urlParams = new URLSearchParams(queryString);\r\n        const roomName = urlParams.get('roomname');\r\n        const wss_protocol = (window.location.protocol == 'https:') ? 'wss://': 'ws://';\r\n        chat_socket = new WebSocket(\r\n            wss_protocol + window.location.host + '/ws/chat/'  + roomName + '/'\r\n        );\r\n\r\n        console.log(wss_protocol + window.location.host + '/ws/chat/'  + roomName + '/')\r\n        // 建立webchat_socket连接时触发此方法\r\n        chat_socket.onopen = function(e) {\r\n            // Do nothing\r\n        }\r\n\r\n        // 从后台接收到数据时触发此方法\r\n        chat_socket.onmessage = function(e) {\r\n            const data = JSON.parse(e.data);\r\n            console.log(messages)\r\n            \r\n            \r\n            setMessages(messages => {\r\n                let msgs = messages.map(m=>m)\r\n                msgs.push({...data, idx:idx_max})\r\n                if(msgs.length>5){\r\n                    msgs = msgs.slice(1)\r\n                }\r\n                return msgs\r\n            })\r\n            idx_max += 1\r\n            \r\n            if(timeout) clearTimeout(timeout)\r\n            timeout = setTimeout(()=>{\r\n                setMessages([])\r\n                clearTimeout(timeout)\r\n            },5000,idx_max) // 5秒后全部消息消失\r\n            \r\n        };\r\n        \r\n    }\r\n\r\n    // const removeMsg = (idx) => {\r\n    //     let msgs = []\r\n    //     messages.forEach(m=>{if(idx===m.idx)msgs.push(m)})\r\n    //     setMessages(msgs)\r\n    // }\r\n\r\n\r\n    return (\r\n        <div className=\"ChatBar\">\r\n            <div className=\"ChatBar-messages\">\r\n                {messages.map(m=>(\r\n                    <div key={Math.random()} className=\"ChatBar-message\">\r\n                        {m.idx}: {m.message}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"ChatBar-actions\">\r\n                <input placeholder=\"Massage\" style={{fontFamily:\"Cochin\", borderRadius: '10px'}} value={text} onChange={e=>{\r\n                    setText(e.target.value)\r\n                }}>\r\n                </input>\r\n\r\n\r\n                <button className=\"SendButton\" style={{fontFamily:\"Cochin\",borderRadius: '10px'}} onClick={()=>{\r\n                    console.log(\"Send\")\r\n                    if (!chat_socket) { console.log(\"error\"); return }\r\n                    chat_socket.send(JSON.stringify({\r\n                        'message': text\r\n                    }));\r\n                }}>Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatBar","C:\\Users\\123\\Documents\\GitHub\\chatverse\\frontend\\src\\app\\components\\Login\\cookie.js",["61"],"export function setCookie(name,value)\r\n{\r\n    var Days = 30;\r\n    var exp = new Date();\r\n    exp.setTime(exp.getTime() + Days*24*60*60*1000);\r\n    document.cookie = name + \"=\"+ escape (value) + \";path=/;expires=\" + exp.toGMTString();\r\n}\r\n\r\nexport function getCookie(name)\r\n{\r\n    var arr,reg=new RegExp(\"(^| )\"+name+\"=([^;]*)(;|$)\");\r\n \r\n    if(arr=document.cookie.match(reg))\r\n \r\n        return unescape(arr[2]);\r\n    else\r\n        return null;\r\n}\r\n\r\nexport function delCookie(name)\r\n{\r\n    var exp = new Date();\r\n    exp.setTime(exp.getTime() - 1);\r\n    var cval=getCookie(name);\r\n    if(cval!=null)\r\n        document.cookie= name + \"=\"+cval+\";path=/;expires=\"+exp.toGMTString();\r\n}",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":19,"nodeType":"68","messageId":"69","endLine":1,"endColumn":24},{"ruleId":"66","severity":1,"message":"70","line":9,"column":28,"nodeType":"68","messageId":"69","endLine":9,"endColumn":44},{"ruleId":"71","severity":1,"message":"72","line":167,"column":25,"nodeType":"68","messageId":"73","endLine":167,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":168,"column":30,"nodeType":"76","messageId":"77","endLine":168,"endColumn":32},{"ruleId":"74","severity":1,"message":"75","line":182,"column":30,"nodeType":"76","messageId":"77","endLine":182,"endColumn":32},{"ruleId":"74","severity":1,"message":"75","line":196,"column":30,"nodeType":"76","messageId":"77","endLine":196,"endColumn":32},{"ruleId":"74","severity":1,"message":"75","line":199,"column":30,"nodeType":"76","messageId":"77","endLine":199,"endColumn":32},{"ruleId":"66","severity":1,"message":"78","line":259,"column":15,"nodeType":"68","messageId":"69","endLine":259,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":485,"column":56,"nodeType":"76","messageId":"77","endLine":485,"endColumn":58},{"ruleId":"79","severity":1,"message":"80","line":529,"column":7,"nodeType":"81","endLine":529,"endColumn":21,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":546,"column":7,"nodeType":"81","endLine":546,"endColumn":14,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"85","line":558,"column":7,"nodeType":"81","endLine":558,"endColumn":17,"suggestions":"86"},{"ruleId":"66","severity":1,"message":"87","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":51,"column":39,"nodeType":"90","messageId":"77","endLine":51,"endColumn":49},{"ruleId":"66","severity":1,"message":"91","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"92","line":18,"column":7,"nodeType":"81","endLine":18,"endColumn":9,"suggestions":"93"},{"ruleId":"74","severity":1,"message":"75","line":27,"column":56,"nodeType":"76","messageId":"77","endLine":27,"endColumn":58},{"ruleId":"94","severity":1,"message":"95","line":13,"column":8,"nodeType":"96","messageId":"97","endLine":13,"endColumn":38},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'setExistRoomName' is assigned a value but never used.","no-redeclare","'e' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'remap' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'newCamera'. Either include it or remove the dependency array.","ArrayExpression",["100"],"React Hook React.useEffect has missing dependencies: 'animate', 'initSocket', 'loadVRM', and 'newLight'. Either include them or remove the dependency array.",["101"],"React Hook React.useEffect has a missing dependency: 'initHolistic'. Either include it or remove the dependency array.",["102"],"'API' is defined but never used.","no-dupe-keys","Duplicate key 'fontFamily'.","ObjectExpression","'useEffect' is defined but never used.","React Hook React.useEffect has a missing dependency: 'initSocket'. Either include it or remove the dependency array.",["103"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [newCamera, videoElement]",{"range":"112","text":"113"},"Update the dependencies array to be: [animate, initSocket, loadVRM, newLight, scene]",{"range":"114","text":"115"},"Update the dependencies array to be: [holistic, initHolistic]",{"range":"116","text":"117"},"Update the dependencies array to be: [initSocket]",{"range":"118","text":"119"},[19428,19442],"[newCamera, videoElement]",[19836,19843],"[animate, initSocket, loadVRM, newLight, scene]",[20180,20190],"[holistic, initHolistic]",[268,270],"[initSocket]"]
=======
[{"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/index.js":"1","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/reportWebVitals.js":"2","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/App.js":"3","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRooms/ChatRooms.js":"4","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatRoom.js":"5","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Sign/Sign.js":"6","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/Login.js":"7","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/cookie.js":"8","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatBar.js":"9"},{"size":505,"mtime":1650102695497,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1650102695497,"results":"12","hashOfConfig":"11"},{"size":904,"mtime":1650102695393,"results":"13","hashOfConfig":"11"},{"size":5371,"mtime":1650205464755,"results":"14","hashOfConfig":"11"},{"size":20226,"mtime":1650202902079,"results":"15","hashOfConfig":"11"},{"size":3454,"mtime":1650198042589,"results":"16","hashOfConfig":"11"},{"size":2813,"mtime":1650201529410,"results":"17","hashOfConfig":"11"},{"size":658,"mtime":1650102695437,"results":"18","hashOfConfig":"11"},{"size":2942,"mtime":1650187604323,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1nmmsgo",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/index.js",[],["42","43"],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/reportWebVitals.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/App.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRooms/ChatRooms.js",["44","45"],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatRoom.js",["46","47","48","49","50","51","52","53","54","55"],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Sign/Sign.js",["56","57"],"import { Input, Button, message } from 'antd'\nimport React from 'react'\nimport { API } from '../../App'\nimport { setCookie } from '../Login/cookie'\n\nimport './Sign.css'\n\nvar Sign = () =>{\n    \n    var [Username, setUsername] = React.useState()\n    var [SignPassword, setSignPassword] = React.useState()\n    var [SignPasswordConfir, setSignPasswordConfir] = React.useState()\n\n    const sign = () =>{\n        if(SignPassword===SignPasswordConfir){\n            let bodydata = {\n                username: Username,\n                password: SignPassword,\n            }\n            setCookie(\"update\",new Date().toUTCString())\n            fetch(`/user/sign/`,{\n                method:'POST',\n                body: JSON.stringify(bodydata),\n            })\n            .then(response=>{\n                if (response.status===200) {\n                    message.success(\"Sussessfully Sign! Return Login pagr to Login\")\n                    setTimeout(() => {\n                        window.location.href=\"/login\"\n                    }, 1000);\n                }else if (response.status===403){\n                    message.warn(\"Sign Fail! Try Again\")\n                }else{\n                    message.warn(\"Unknown Error! Try Again!\") \n                }\n            })\n        }\n        else{\n            message.warn(\"Inconsistent Password!\")\n            setTimeout(() => {\n                window.location.reload()\n            }, 2000);\n        }\n    }\n\n    return(\n        <div className='Sign'>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n                <div style={{\n                    \"fontSize\":\"calc(4vh + 25px)\", color:\"white\", fontFamily:\"Georgia\",\n                    marginTop:\"10vh\", fontFamily:\"Cochin\"\n                }}>Sign up</div>\n                <div>\n                    <form className='Sign-form'>\n                        <div className='Sign-form-username'>\n                            <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Username</div>\n                            <Input style={{\"height\":\"2rem\"}} id='username' type=\"text\" value={Username} onChange={e=>setUsername(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-password'>\n                            <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Password</div>\n                            <Input style={{\"height\":\"2rem\"}} id='password' type=\"password\" value={SignPassword} onChange={e=>setSignPassword(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-passwordConfir'>\n                            <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Confirm Password</div>\n                            <Input style={{\"height\":\"2rem\"}} id='passwordConfir' type=\"password\" value={SignPasswordConfir} onChange={e=>setSignPasswordConfir(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-submit'>\n                            <Button style={{cursor:\"pointer\", fontFamily:\"Cochin\"}} id='submit' type=\"button\" onClick={sign}>Sign up</Button>\n                        </div>\n                        <div className='Sign-Sign-in'>\n                            <a href=\"/login\" style={{color:\"blueviolet\", fontFamily:\"Cochin\"}}><u>Sign in ChatVerse</u></a>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Sign","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/Login.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/cookie.js",["58"],"export function setCookie(name,value)\n{\n    var Days = 30;\n    var exp = new Date();\n    exp.setTime(exp.getTime() + Days*24*60*60*1000);\n    document.cookie = name + \"=\"+ escape (value) + \";path=/;expires=\" + exp.toGMTString();\n}\n\nexport function getCookie(name)\n{\n    var arr,reg=new RegExp(\"(^| )\"+name+\"=([^;]*)(;|$)\");\n \n    if(arr=document.cookie.match(reg))\n \n        return unescape(arr[2]);\n    else\n        return null;\n}\n\nexport function delCookie(name)\n{\n    var exp = new Date();\n    exp.setTime(exp.getTime() - 1);\n    var cval=getCookie(name);\n    if(cval!=null)\n        document.cookie= name + \"=\"+cval+\";path=/;expires=\"+exp.toGMTString();\n}","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatBar.js",["59","60","61"],"import React, { useEffect } from \"react\";\nimport \"./ChatBar.css\"\n\nvar idx_max = 0\n\nvar chat_socket = null;\n\nvar timeout\n\nconst ChatBar = () => {\n\n    const [ text, setText ] = React.useState(\"\")\n\n\n\n    React.useEffect(()=>{\n        initSocket()\n    },[])\n\n    const [ messages, setMessages ] = React.useState([])\n\n    const initSocket = () => {\n        // 从 URL Params 获取 roon name\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const roomName = urlParams.get('roomname');\n        const wss_protocol = (window.location.protocol == 'https:') ? 'wss://': 'ws://';\n        chat_socket = new WebSocket(\n            wss_protocol + window.location.host + '/ws/chat/'  + roomName + '/'\n        );\n\n        console.log(wss_protocol + window.location.host + '/ws/chat/'  + roomName + '/')\n        // 建立webchat_socket连接时触发此方法\n        chat_socket.onopen = function(e) {\n            // Do nothing\n        }\n\n        // 从后台接收到数据时触发此方法\n        chat_socket.onmessage = function(e) {\n            const data = JSON.parse(e.data);\n            console.log(messages)\n            \n            \n            setMessages(messages => {\n                let msgs = messages.map(m=>m)\n                msgs.push({...data, idx:idx_max})\n                if(msgs.length>5){\n                    msgs = msgs.slice(1)\n                }\n                return msgs\n            })\n            idx_max += 1\n            \n            if(timeout) clearTimeout(timeout)\n            timeout = setTimeout(()=>{\n                setMessages([])\n                clearTimeout(timeout)\n            },5000,idx_max) // 5秒后全部消息消失\n            \n        };\n        \n    }\n\n    // const removeMsg = (idx) => {\n    //     let msgs = []\n    //     messages.forEach(m=>{if(idx===m.idx)msgs.push(m)})\n    //     setMessages(msgs)\n    // }\n\n\n    return (\n        <div className=\"ChatBar\">\n            <div className=\"ChatBar-messages\">\n                {messages.map(m=>(\n                    <div key={Math.random()} className=\"ChatBar-message\">\n                        {m.idx}: {m.message}\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"ChatBar-actions\">\n                <input placeholder=\"Massage\" style={{fontFamily:\"Cochin\", borderRadius: '10px'}} value={text} onChange={e=>{\n                    setText(e.target.value)\n                }}>\n                </input>\n\n\n                <button className=\"SendButton\" style={{fontFamily:\"Cochin\",borderRadius: '10px'}} onClick={()=>{\n                    console.log(\"Send\")\n                    if (!chat_socket) { console.log(\"error\"); return }\n                    chat_socket.send(JSON.stringify({\n                        'message': text\n                    }));\n                }}>Send</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatBar",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":19,"nodeType":"68","messageId":"69","endLine":1,"endColumn":24},{"ruleId":"66","severity":1,"message":"70","line":9,"column":28,"nodeType":"68","messageId":"69","endLine":9,"endColumn":44},{"ruleId":"71","severity":1,"message":"72","line":167,"column":25,"nodeType":"68","messageId":"73","endLine":167,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":168,"column":30,"nodeType":"76","messageId":"77","endLine":168,"endColumn":32},{"ruleId":"74","severity":1,"message":"75","line":182,"column":30,"nodeType":"76","messageId":"77","endLine":182,"endColumn":32},{"ruleId":"74","severity":1,"message":"75","line":196,"column":30,"nodeType":"76","messageId":"77","endLine":196,"endColumn":32},{"ruleId":"74","severity":1,"message":"75","line":199,"column":30,"nodeType":"76","messageId":"77","endLine":199,"endColumn":32},{"ruleId":"66","severity":1,"message":"78","line":259,"column":15,"nodeType":"68","messageId":"69","endLine":259,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":485,"column":56,"nodeType":"76","messageId":"77","endLine":485,"endColumn":58},{"ruleId":"79","severity":1,"message":"80","line":529,"column":7,"nodeType":"81","endLine":529,"endColumn":21,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":546,"column":7,"nodeType":"81","endLine":546,"endColumn":14,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"85","line":558,"column":7,"nodeType":"81","endLine":558,"endColumn":17,"suggestions":"86"},{"ruleId":"66","severity":1,"message":"87","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":51,"column":39,"nodeType":"90","messageId":"77","endLine":51,"endColumn":49},{"ruleId":"91","severity":1,"message":"92","line":13,"column":8,"nodeType":"93","messageId":"94","endLine":13,"endColumn":38},{"ruleId":"66","severity":1,"message":"95","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"96","line":18,"column":7,"nodeType":"81","endLine":18,"endColumn":9,"suggestions":"97"},{"ruleId":"74","severity":1,"message":"75","line":27,"column":56,"nodeType":"76","messageId":"77","endLine":27,"endColumn":58},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'setExistRoomName' is assigned a value but never used.","no-redeclare","'e' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'remap' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'newCamera'. Either include it or remove the dependency array.","ArrayExpression",["100"],"React Hook React.useEffect has missing dependencies: 'animate', 'initSocket', 'loadVRM', and 'newLight'. Either include them or remove the dependency array.",["101"],"React Hook React.useEffect has a missing dependency: 'initHolistic'. Either include it or remove the dependency array.",["102"],"'API' is defined but never used.","no-dupe-keys","Duplicate key 'fontFamily'.","ObjectExpression","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'useEffect' is defined but never used.","React Hook React.useEffect has a missing dependency: 'initSocket'. Either include it or remove the dependency array.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [newCamera, videoElement]",{"range":"112","text":"113"},"Update the dependencies array to be: [animate, initSocket, loadVRM, newLight, scene]",{"range":"114","text":"115"},"Update the dependencies array to be: [holistic, initHolistic]",{"range":"116","text":"117"},"Update the dependencies array to be: [initSocket]",{"range":"118","text":"119"},[18900,18914],"[newCamera, videoElement]",[19291,19298],"[animate, initSocket, loadVRM, newLight, scene]",[19623,19633],"[holistic, initHolistic]",[251,253],"[initSocket]"]
>>>>>>> abe6160c98d712b0de694fe523a25f46bea3e8e7
=======
[{"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/index.js":"1","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/reportWebVitals.js":"2","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/App.js":"3","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRooms/ChatRooms.js":"4","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatRoom.js":"5","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Sign/Sign.js":"6","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/Login.js":"7","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/cookie.js":"8","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatBar.js":"9"},{"size":505,"mtime":1650102695497,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1650102695497,"results":"12","hashOfConfig":"11"},{"size":904,"mtime":1650102695393,"results":"13","hashOfConfig":"11"},{"size":10367,"mtime":1650211477198,"results":"14","hashOfConfig":"11"},{"size":20735,"mtime":1650211859363,"results":"15","hashOfConfig":"11"},{"size":3454,"mtime":1650198042589,"results":"16","hashOfConfig":"11"},{"size":2813,"mtime":1650201529410,"results":"17","hashOfConfig":"11"},{"size":658,"mtime":1650102695437,"results":"18","hashOfConfig":"11"},{"size":2942,"mtime":1650187604323,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1nmmsgo",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/index.js",[],["42","43"],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/reportWebVitals.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/App.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRooms/ChatRooms.js",["44","45","46","47","48","49","50"],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatRoom.js",["51","52","53","54","55","56","57","58","59","60"],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Sign/Sign.js",["61","62"],"import { Input, Button, message } from 'antd'\nimport React from 'react'\nimport { API } from '../../App'\nimport { setCookie } from '../Login/cookie'\n\nimport './Sign.css'\n\nvar Sign = () =>{\n    \n    var [Username, setUsername] = React.useState()\n    var [SignPassword, setSignPassword] = React.useState()\n    var [SignPasswordConfir, setSignPasswordConfir] = React.useState()\n\n    const sign = () =>{\n        if(SignPassword===SignPasswordConfir){\n            let bodydata = {\n                username: Username,\n                password: SignPassword,\n            }\n            setCookie(\"update\",new Date().toUTCString())\n            fetch(`/user/sign/`,{\n                method:'POST',\n                body: JSON.stringify(bodydata),\n            })\n            .then(response=>{\n                if (response.status===200) {\n                    message.success(\"Sussessfully Sign! Return Login pagr to Login\")\n                    setTimeout(() => {\n                        window.location.href=\"/login\"\n                    }, 1000);\n                }else if (response.status===403){\n                    message.warn(\"Sign Fail! Try Again\")\n                }else{\n                    message.warn(\"Unknown Error! Try Again!\") \n                }\n            })\n        }\n        else{\n            message.warn(\"Inconsistent Password!\")\n            setTimeout(() => {\n                window.location.reload()\n            }, 2000);\n        }\n    }\n\n    return(\n        <div className='Sign'>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n                <div style={{\n                    \"fontSize\":\"calc(4vh + 25px)\", color:\"white\", fontFamily:\"Georgia\",\n                    marginTop:\"10vh\", fontFamily:\"Cochin\"\n                }}>Sign up</div>\n                <div>\n                    <form className='Sign-form'>\n                        <div className='Sign-form-username'>\n                            <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Username</div>\n                            <Input style={{\"height\":\"2rem\"}} id='username' type=\"text\" value={Username} onChange={e=>setUsername(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-password'>\n                            <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Password</div>\n                            <Input style={{\"height\":\"2rem\"}} id='password' type=\"password\" value={SignPassword} onChange={e=>setSignPassword(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-passwordConfir'>\n                            <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Confirm Password</div>\n                            <Input style={{\"height\":\"2rem\"}} id='passwordConfir' type=\"password\" value={SignPasswordConfir} onChange={e=>setSignPasswordConfir(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-submit'>\n                            <Button style={{cursor:\"pointer\", fontFamily:\"Cochin\"}} id='submit' type=\"button\" onClick={sign}>Sign up</Button>\n                        </div>\n                        <div className='Sign-Sign-in'>\n                            <a href=\"/login\" style={{color:\"blueviolet\", fontFamily:\"Cochin\"}}><u>Sign in ChatVerse</u></a>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Sign","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/Login.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/cookie.js",["63"],"export function setCookie(name,value)\n{\n    var Days = 30;\n    var exp = new Date();\n    exp.setTime(exp.getTime() + Days*24*60*60*1000);\n    document.cookie = name + \"=\"+ escape (value) + \";path=/;expires=\" + exp.toGMTString();\n}\n\nexport function getCookie(name)\n{\n    var arr,reg=new RegExp(\"(^| )\"+name+\"=([^;]*)(;|$)\");\n \n    if(arr=document.cookie.match(reg))\n \n        return unescape(arr[2]);\n    else\n        return null;\n}\n\nexport function delCookie(name)\n{\n    var exp = new Date();\n    exp.setTime(exp.getTime() - 1);\n    var cval=getCookie(name);\n    if(cval!=null)\n        document.cookie= name + \"=\"+cval+\";path=/;expires=\"+exp.toGMTString();\n}","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatBar.js",["64","65","66"],"import React, { useEffect } from \"react\";\nimport \"./ChatBar.css\"\n\nvar idx_max = 0\n\nvar chat_socket = null;\n\nvar timeout\n\nconst ChatBar = () => {\n\n    const [ text, setText ] = React.useState(\"\")\n\n\n\n    React.useEffect(()=>{\n        initSocket()\n    },[])\n\n    const [ messages, setMessages ] = React.useState([])\n\n    const initSocket = () => {\n        // 从 URL Params 获取 roon name\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const roomName = urlParams.get('roomname');\n        const wss_protocol = (window.location.protocol == 'https:') ? 'wss://': 'ws://';\n        chat_socket = new WebSocket(\n            wss_protocol + window.location.host + '/ws/chat/'  + roomName + '/'\n        );\n\n        console.log(wss_protocol + window.location.host + '/ws/chat/'  + roomName + '/')\n        // 建立webchat_socket连接时触发此方法\n        chat_socket.onopen = function(e) {\n            // Do nothing\n        }\n\n        // 从后台接收到数据时触发此方法\n        chat_socket.onmessage = function(e) {\n            const data = JSON.parse(e.data);\n            console.log(messages)\n            \n            \n            setMessages(messages => {\n                let msgs = messages.map(m=>m)\n                msgs.push({...data, idx:idx_max})\n                if(msgs.length>5){\n                    msgs = msgs.slice(1)\n                }\n                return msgs\n            })\n            idx_max += 1\n            \n            if(timeout) clearTimeout(timeout)\n            timeout = setTimeout(()=>{\n                setMessages([])\n                clearTimeout(timeout)\n            },5000,idx_max) // 5秒后全部消息消失\n            \n        };\n        \n    }\n\n    // const removeMsg = (idx) => {\n    //     let msgs = []\n    //     messages.forEach(m=>{if(idx===m.idx)msgs.push(m)})\n    //     setMessages(msgs)\n    // }\n\n\n    return (\n        <div className=\"ChatBar\">\n            <div className=\"ChatBar-messages\">\n                {messages.map(m=>(\n                    <div key={Math.random()} className=\"ChatBar-message\">\n                        {m.idx}: {m.message}\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"ChatBar-actions\">\n                <input placeholder=\"Massage\" style={{fontFamily:\"Cochin\", borderRadius: '10px'}} value={text} onChange={e=>{\n                    setText(e.target.value)\n                }}>\n                </input>\n\n\n                <button className=\"SendButton\" style={{fontFamily:\"Cochin\",borderRadius: '10px'}} onClick={()=>{\n                    console.log(\"Send\")\n                    if (!chat_socket) { console.log(\"error\"); return }\n                    chat_socket.send(JSON.stringify({\n                        'message': text\n                    }));\n                }}>Send</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatBar",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":19,"nodeType":"73","messageId":"74","endLine":1,"endColumn":24},{"ruleId":"71","severity":1,"message":"75","line":9,"column":13,"nodeType":"73","messageId":"74","endLine":9,"endColumn":26},{"ruleId":"71","severity":1,"message":"76","line":9,"column":28,"nodeType":"73","messageId":"74","endLine":9,"endColumn":44},{"ruleId":"71","severity":1,"message":"77","line":10,"column":12,"nodeType":"73","messageId":"74","endLine":10,"endColumn":24},{"ruleId":"71","severity":1,"message":"78","line":10,"column":26,"nodeType":"73","messageId":"74","endLine":10,"endColumn":41},{"ruleId":"71","severity":1,"message":"79","line":79,"column":11,"nodeType":"73","messageId":"74","endLine":79,"endColumn":26},{"ruleId":"71","severity":1,"message":"80","line":100,"column":11,"nodeType":"73","messageId":"74","endLine":100,"endColumn":25},{"ruleId":"81","severity":1,"message":"82","line":179,"column":25,"nodeType":"73","messageId":"83","endLine":179,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":180,"column":30,"nodeType":"86","messageId":"87","endLine":180,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":194,"column":30,"nodeType":"86","messageId":"87","endLine":194,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":208,"column":30,"nodeType":"86","messageId":"87","endLine":208,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":211,"column":30,"nodeType":"86","messageId":"87","endLine":211,"endColumn":32},{"ruleId":"71","severity":1,"message":"88","line":271,"column":15,"nodeType":"73","messageId":"74","endLine":271,"endColumn":20},{"ruleId":"84","severity":1,"message":"85","line":498,"column":56,"nodeType":"86","messageId":"87","endLine":498,"endColumn":58},{"ruleId":"89","severity":1,"message":"90","line":543,"column":7,"nodeType":"91","endLine":543,"endColumn":21,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":560,"column":7,"nodeType":"91","endLine":560,"endColumn":14,"suggestions":"94"},{"ruleId":"89","severity":1,"message":"95","line":572,"column":7,"nodeType":"91","endLine":572,"endColumn":17,"suggestions":"96"},{"ruleId":"71","severity":1,"message":"97","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":13},{"ruleId":"98","severity":1,"message":"99","line":51,"column":39,"nodeType":"100","messageId":"87","endLine":51,"endColumn":49},{"ruleId":"101","severity":1,"message":"102","line":13,"column":8,"nodeType":"103","messageId":"104","endLine":13,"endColumn":38},{"ruleId":"71","severity":1,"message":"105","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"106","line":18,"column":7,"nodeType":"91","endLine":18,"endColumn":9,"suggestions":"107"},{"ruleId":"84","severity":1,"message":"85","line":27,"column":56,"nodeType":"86","messageId":"87","endLine":27,"endColumn":58},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'existRoomName' is assigned a value but never used.","'setExistRoomName' is assigned a value but never used.","'selectAVerse' is assigned a value but never used.","'setSelectAVerse' is assigned a value but never used.","'Manage_my_Verse' is assigned a value but never used.","'Select_a_Verse' is assigned a value but never used.","no-redeclare","'e' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'remap' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'newCamera'. Either include it or remove the dependency array.","ArrayExpression",["110"],"React Hook React.useEffect has missing dependencies: 'animate', 'initSocket', 'loadVRM', and 'newLight'. Either include them or remove the dependency array.",["111"],"React Hook React.useEffect has a missing dependency: 'initHolistic'. Either include it or remove the dependency array.",["112"],"'API' is defined but never used.","no-dupe-keys","Duplicate key 'fontFamily'.","ObjectExpression","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'useEffect' is defined but never used.","React Hook React.useEffect has a missing dependency: 'initSocket'. Either include it or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [newCamera, videoElement]",{"range":"122","text":"123"},"Update the dependencies array to be: [animate, initSocket, loadVRM, newLight, scene]",{"range":"124","text":"125"},"Update the dependencies array to be: [holistic, initHolistic]",{"range":"126","text":"127"},"Update the dependencies array to be: [initSocket]",{"range":"128","text":"129"},[19366,19380],"[newCamera, videoElement]",[19763,19770],"[animate, initSocket, loadVRM, newLight, scene]",[20116,20126],"[holistic, initHolistic]",[251,253],"[initSocket]"]

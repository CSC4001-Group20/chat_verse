[{"/Users/yanghaowen/Desktop/chat_verse/frontend/src/index.js":"1","/Users/yanghaowen/Desktop/chat_verse/frontend/src/reportWebVitals.js":"2","/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/App.js":"3","/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/components/ChatRoom/ChatRoom.js":"4","/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/components/Login/Login.js":"5","/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/components/Sign/Sign.js":"6","/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/components/ChatRooms/ChatRooms.js":"7","/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/components/ChatRoom/ChatBar.js":"8","/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/components/Login/cookie.js":"9","/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/components/Shop/Shop.js":"10"},{"size":505,"mtime":1650102590236,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1650102590236,"results":"13","hashOfConfig":"12"},{"size":1008,"mtime":1650267843631,"results":"14","hashOfConfig":"12"},{"size":25175,"mtime":1650289649390,"results":"15","hashOfConfig":"12"},{"size":2876,"mtime":1650261755689,"results":"16","hashOfConfig":"12"},{"size":3474,"mtime":1650267843701,"results":"17","hashOfConfig":"12"},{"size":8104,"mtime":1650289909117,"results":"18","hashOfConfig":"12"},{"size":4101,"mtime":1650291862702,"results":"19","hashOfConfig":"12"},{"size":658,"mtime":1650102590114,"results":"20","hashOfConfig":"12"},{"size":13079,"mtime":1650290375292,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1dnx1mf",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"/Users/yanghaowen/Desktop/chat_verse/frontend/src/index.js",[],["48","49"],"/Users/yanghaowen/Desktop/chat_verse/frontend/src/reportWebVitals.js",[],"/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/App.js",[],"/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/components/ChatRoom/ChatRoom.js",["50","51","52","53","54","55","56","57","58","59","60"],"// import logo from './logo.svg';\n// import { Face, Pose, Hand } from \"kalidokit\";\nimport React from 'react';\nimport { Holistic } from \"@mediapipe/holistic\"\nimport { Camera } from \"@mediapipe/camera_utils\"\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { VRM, VRMSchema, VRMUtils } from '@pixiv/three-vrm';\nimport * as THREE from 'three';\nimport * as Kalidokit from \"kalidokit\";\nimport ChatBar from './ChatBar';\nimport {FBXLoader} from 'three/examples/jsm/loaders/FBXLoader'\nimport \"./ChatRoom.css\"\nimport { PoweroffOutlined } from '@ant-design/icons';\nimport { ImportOutlined } from '@ant-design/icons';\nimport { ShoppingCartOutlined } from '@ant-design/icons';\nimport { message } from 'antd';\nimport { setCookie } from '../Login/cookie';\n\n\nvar VRMs = [];\nvar transforms = [];\nvar uids = []\n\nvar flag = false;\n\nconst theta = 2*Math.PI/9;\n\nvar uids_loading = [] // 用于记录正在下载VRM的玩家，避免重复下载\n\nvar oldLookTarget = new THREE.Euler();\nconst clock = new THREE.Clock();\nconst renderer =  new THREE.WebGLRenderer({alpha:true});\nvar orbitCamera;\nvar orbitControls\n\nvar motion_socket = null;\nvar uid;\nvar my_idx = -1;\n\nfunction ChatRoom() {\n\n    /* State Defnewion */\n    const [ videoElement, setVideoElement ] = React.useState(null);\n    const [ camera, setCamera ] = React.useState(null)\n    const [ holistic, setHolistic ] = React.useState(null)\n    const [ scene, setScene ] = React.useState(null)\n    // const [ avatar, setAvatar ] = React.useState(null)\n\n    \n    /* Initalizing Functions */\n\n    const getUsingAvatar = (uid, next)=>{\n        setCookie(\"update\",new Date().toUTCString())\n        fetch(`/user/avatar/?uid=${uid}`,{\n            method:'GET',\n        }).then(res=>{\n            if(res.status===200){\n                return res.json()\n            }else{\n                message.warn(\"get Avatar list Fail\")\n            }\n        }).then(data=>{\n            // setAvatar(data.result)\n            next(data.result)\n        }) \n    }\n\n    const getUid = () => {\n        // 从 URL Params 获取 roon name\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        uid = urlParams.get('uid');\n    }\n\n    const newVideoElement = () => setVideoElement(document.querySelector(\".input_video\"));\n\n    const newHolistic = () =>{\n        setHolistic(new Holistic({\n            locateFile: file => {\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/holistic@0.5.1635989137/${file}`;\n            }\n        }))\n    }\n\n    const initHolistic = () => {\n        holistic.setOptions({\n            modelComplexity: 1,\n            smoothLandmarks: true,\n            minDetectionConfidence: 0.7,\n            minTrackingConfidence: 0.7,\n            refineFaceLandmarks: true,\n        });\n        holistic.onResults(onResults);\n    }\n\n    const newCamera = () => setCamera(new Camera(videoElement, {\n        onFrame: async () => {\n            await holistic.send({image: videoElement});\n        },\n        width: 640,\n        height: 480\n    }))\n\n    const newScene = () => {\n        setScene( new THREE.Scene() )\n    }\n\n    const newLight = () => {\n        // const light = new THREE.DirectionalLight(0xffffff);\n        // light.position.set(1.0, 1.0, 1.0).normalize();\n        // scene.add(light);\n        let Ambient = new THREE.AmbientLight(0x404040, 2);\n        scene.add(Ambient);\n\n        //给场景添加太阳光\n        let Sun = new THREE.DirectionalLight(0xffffff, 1);\n        Sun.position.set(1, 1, 1);\n        Sun.castShadow = true;\n\n        //设置相机渲染面积\n        Sun.shadow.camera.near = 0.01;\n        Sun.shadow.camera.far = 60;\n        Sun.shadow.camera.top = 22;\n        Sun.shadow.camera.bottom = -22;\n        Sun.shadow.camera.left = -35;\n        Sun.shadow.camera.right = 35;\n        // //设置阴影分辨率\n        Sun.shadow.mapSize.width = 2048;  // default\n        Sun.shadow.mapSize.height = 2048; // default\n        //阴影限制\n        Sun.shadow.radius = 1;\n        scene.add(Sun);\n    }\n\n    const loadSky = () => {\n        const pictures = [\"/models/right.jpg\", \"/models/left.jpg\", \"/models/top.jpg\", \"/models/bottom.jpg\", \"/models/front.jpg\", \"/models/back.jpg\"];\n        var textureCube = new THREE.CubeTextureLoader().load(pictures);\n        scene.background = textureCube;\n    }\n\n    const loadBase = () => {\n        let textureLoader = new THREE.TextureLoader()\n        let texture = textureLoader.load(\"/models/base.jpg\")\n        // THREE.RepeatWrapping：平铺重复。\n        texture.wrapS = texture.wrapT = THREE.RepeatWrapping; \n        // 设置重复次数\n        texture.repeat.set(100, 100)\n        let geometry = new THREE.PlaneGeometry(1000, 1000, 32);\n        let material = new THREE.MeshBasicMaterial({\n                map: texture,  // 使用纹理贴图\n                side: THREE.DoubleSide  // 两面都渲染\n            });\n        let plane = new THREE.Mesh(geometry, material);\n        plane.rotateX(Math.PI / 2)\n        scene.add(plane);\n    }\n\n    const loadFBX = () => {\n        var loader = new FBXLoader();\n        loader.load('/models/Cottage/Cottage_FREE.fbx', (object) => {\n            console.log(object)\n            const list = [\n                '/models/Cottage/Cottage_Clean_Base_Color.png',\n                '/models/Cottage/Cottage_Clean_AO.png',\n                '/models/Cottage/Cottage_Clean_Height.png',\n                '/models/Cottage/Cottage_Clean_Metallic.png',\n                '/models/Cottage/Cottage_Clean_MetallicSmoothness.png',\n                '/models/Cottage/Cottage_Clean_Normal.png',\n                '/models/Cottage/Cottage_Clean_Roughness.png',\n                '/models/Cottage/Cottage_Clean_Opacity.png'\n            ]\n            const textureLoader = new THREE.TextureLoader();\n            object.traverse( function ( child ) {\n                if ( child.isMesh ) {\n                    console.log(child)\n                    child.castShadow = true;\n                    child.receiveShadow = true;\n                    child.material.map = textureLoader.load(list[0])\n                    child.material.aoMap = textureLoader.load(list[1])\n                    child.material.alphaMap = textureLoader.load(list[2])\n                }\n            } );\n            //缩放\n            object.scale.set(0.01,0.01,0.01);\n            //位置\n            object.position.set(-30,0,-30);\n            scene.add( object ); \n        },null,(e)=>{console.log(e)})\n    }\n\n    const initRenderingPipeline = () => {\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        document.body.appendChild(renderer.domElement);\n\n        // 下面这行可以禁用THREE的交互\n        // renderer.domElement.style.pointerEvents = \"none\" \n        orbitCamera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\n        orbitCamera.position.set(0.0, 1.4, 0.7);\n\n        orbitControls = new OrbitControls(orbitCamera, renderer.domElement);\n        orbitControls.screenSpacePanning = true;\n        orbitControls.target.set(0.0, 1.4, 0.0);\n        orbitControls.update();\n    }\n\n\n\n\n    /* Logic Functions */\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const loadVRM = (_uid) => {\n\n        // console.log(\"1\",uid, _uid)\n\n        if(!scene) { console.log(\"No scene, return\");return}\n\n        uids_loading.push(_uid)\n\n        const loader = new GLTFLoader();\n        loader.crossOrigin = \"anonymous\";\n\n        getUsingAvatar(_uid, (avatar)=>{\n            // TODO: 不同的UID从不同的URL获取\n            // 需要查询Avatar数据库\n            loader.load(\n                (avatar&&avatar.src)?avatar.src:\"https://cd-1302933783.cos.ap-guangzhou.myqcloud.com/chatverse/demo.vrm\",\n        \n                gltf => {\n                    VRMUtils.removeUnnecessaryJoints(gltf.scene);\n        \n                    VRM.from(gltf).then(vrm => {\n                        let idx = VRMs.length\n                        scene.add(vrm.scene);\n                        VRMs[idx] = vrm\n                        uids[idx] = _uid\n                        // console.log(\"2\",uid, _uid)\n                        if(_uid===uid){\n                            my_idx=idx\n                            console.log(\"init control\")\n                            initControl()\n                        }\n                        console.log(\"Loaded a new player\",uid, idx)\n                        uids_loading.splice(uids_loading.indexOf(uid),1)\n                    });\n                    \n                },\n        \n                progress =>\n                    // console.log(\n                    //     \"Loading model...\",\n                    //     100.0 * (progress.loaded / progress.total),\n                    //     \"%\"\n                    // ),\n        \n                error => {\n                    console.error(error)\n\n                }\n            );\n        })\n\n        \n    }\n\n    /* SHOULD DEBUG */\n    // 不想思考角度换算了，谁来思考一下\n    const initControl = () => {\n\n        if(my_idx!==undefined){\n\n            transforms[my_idx] = {x:0, z:0, r:0}\n\n            document.addEventListener('keypress', e=>{\n                if(transforms[my_idx]){\n                    var e = e || window.event;\n                    if(e.key == 'w'){\n                        transforms[my_idx].x -= 0.1 * Math.sin(transforms[my_idx].r*theta)\n                        transforms[my_idx].z -= 0.1 * Math.cos(transforms[my_idx].r*theta)\n                        orbitControls.target.set(\n                            transforms[my_idx].x,\n                            1.4,\n                            transforms[my_idx].z\n                        )\n                        orbitCamera.position.set(\n                            -0.1 * Math.sin(transforms[my_idx].r*theta) + orbitCamera.position.x,\n                            orbitCamera.position.y,\n                            -0.1 * Math.cos(transforms[my_idx].r*theta) + orbitCamera.position.z\n                        )\n                    }\n                    if(e.key == 's'){\t\n                        transforms[my_idx].x += 0.1 * Math.sin(transforms[my_idx].r*theta)\n                        transforms[my_idx].z += 0.1 * Math.cos(transforms[my_idx].r*theta)\n                        orbitControls.target.set(\n                            transforms[my_idx].x,\n                            1.4,\n                            transforms[my_idx].z\n                        )\n                        orbitCamera.position.set(\n                            +0.1 * Math.sin(transforms[my_idx].r*theta) + orbitCamera.position.x,\n                            orbitCamera.position.y,\n                            +0.1 * Math.cos(transforms[my_idx].r*theta) + orbitCamera.position.z\n                        )\n                    }\n                    if(e.key == 'a'){\n                        transforms[my_idx].r += 0.3\n                    }\n                    if(e.key == 'd'){\t\n                        transforms[my_idx].r -= 0.3\n                    }\n                }\n            }) \n        }\n    }\n\n\n    const rigRotation = (\n        idx,\n        name,\n        rotation = { x: 0, y: 0, z: 0 },\n        dampener = 1,\n        lerpAmount = 0.3\n    ) => {\n        let currentVrm = VRMs[idx]\n        if (!currentVrm) {return}\n        const Part = currentVrm.humanoid.getBoneNode(\n            VRMSchema.HumanoidBoneName[name]\n        );\n        if (!Part) {return}\n\n        \n        let euler = new THREE.Euler(\n            rotation.x * dampener,\n            rotation.y * dampener,\n            rotation.z * dampener\n        );\n        let quaternion = new THREE.Quaternion().setFromEuler(euler);\n        Part.quaternion.slerp(quaternion, lerpAmount); // interpolate\n    };\n\n    // Animate Position Helper Function\n    const rigPosition = (\n        idx,\n        name,\n        position = { x: 0, y: 0, z: 0 },\n        dampener = 1,\n        lerpAmount = 0.3\n    ) => {\n        let currentVrm = VRMs[idx]\n        if (!currentVrm) {return}\n        const Part = currentVrm.humanoid.getBoneNode(\n        VRMSchema.HumanoidBoneName[name]\n        );\n        if (!Part) {return}\n        let vector = new THREE.Vector3(\n            position.x * dampener,\n            position.y * dampener,\n            position.z * dampener\n        );\n        Part.position.lerp(vector, lerpAmount); // interpolate\n    };\n\n    const rigFace = (idx, riggedFace) => {\n\n        let currentVrm = VRMs[idx]\n\n        // Renaming sime useful functions for easy use.\n        const remap = Kalidokit.Utils.remap;\n        const clamp = Kalidokit.Utils.clamp;\n        const lerp = Kalidokit.Vector.lerp;\n\n        \n\n        if(!currentVrm){return}\n        rigRotation(idx, \"Neck\", riggedFace.head, 0.7);\n    \n        // Blendshapes and Preset Name Schema\n        const Blendshape = currentVrm.blendShapeProxy;\n        const PresetName = VRMSchema.BlendShapePresetName;\n      \n        // Simple example without winking. Interpolate based on old blendshape, then stabilize blink with `Kalidokit` helper function.\n        // for VRM, 1 is closed, 0 is open.\n        riggedFace.eye.l = lerp(clamp(1 - riggedFace.eye.l, 0, 1),Blendshape.getValue(PresetName.Blink), .5)\n        riggedFace.eye.r = lerp(clamp(1 - riggedFace.eye.r, 0, 1),Blendshape.getValue(PresetName.Blink), .5)\n        riggedFace.eye = Kalidokit.Face.stabilizeBlink(riggedFace.eye,riggedFace.head.y)\n        Blendshape.setValue(PresetName.Blink, riggedFace.eye.l);\n        \n        // Interpolate and set mouth blendshapes\n        Blendshape.setValue(PresetName.I, lerp(riggedFace.mouth.shape.I,Blendshape.getValue(PresetName.I), .5));\n        Blendshape.setValue(PresetName.A, lerp(riggedFace.mouth.shape.A,Blendshape.getValue(PresetName.A), .5));\n        Blendshape.setValue(PresetName.E, lerp(riggedFace.mouth.shape.E,Blendshape.getValue(PresetName.E), .5));\n        Blendshape.setValue(PresetName.O, lerp(riggedFace.mouth.shape.O,Blendshape.getValue(PresetName.O), .5));\n        Blendshape.setValue(PresetName.U, lerp(riggedFace.mouth.shape.U,Blendshape.getValue(PresetName.U), .5));\n    \n        //PUPILS\n        //interpolate pupil and keep a copy of the value\n        let lookTarget =\n          new THREE.Euler(\n            lerp(oldLookTarget.x , riggedFace.pupil.y, .4),\n            lerp(oldLookTarget.y, riggedFace.pupil.x, .4),\n            0,\n            \"XYZ\"\n          )\n        oldLookTarget.copy(lookTarget)\n        currentVrm.lookAt.applyer.lookAt(lookTarget);\n    }\n\n    const onResults = (results) => {\n        // Animate model\n        if (!VRMs[my_idx]) return;\n\n        // Take the results from `Holistic` and animate character based on its Face, Pose, and Hand Keypoints.\n        let riggedPose, riggedLeftHand, riggedRightHand, riggedFace;\n    \n        const faceLandmarks = results.faceLandmarks;\n        // Pose 3D Landmarks are with respect to Hip distance in meters\n        const pose3DLandmarks = results.ea;\n        // Pose 2D landmarks are with respect to videoWidth and videoHeight\n        const pose2DLandmarks = results.poseLandmarks;\n        // Be careful, hand landmarks may be reversed\n        const leftHandLandmarks = results.rightHandLandmarks;\n        const rightHandLandmarks = results.leftHandLandmarks;\n        \n\n        // Animate Face\n        if (faceLandmarks) {\n            riggedFace = Kalidokit.Face.solve(faceLandmarks,{\n                runtime:\"mediapipe\",\n                video:videoElement\n            });\n        }\n\n        \n        \n        // Animate Pose\n        if (pose2DLandmarks && pose3DLandmarks) {\n            riggedPose = Kalidokit.Pose.solve(pose3DLandmarks, pose2DLandmarks, {\n                runtime: \"mediapipe\",\n                video:videoElement,\n            });\n        }\n        \n            // Animate Hands\n        if (leftHandLandmarks) {\n            riggedLeftHand = Kalidokit.Hand.solve(leftHandLandmarks, \"Left\");\n        }\n            \n        if (rightHandLandmarks) {\n            riggedRightHand = Kalidokit.Hand.solve(rightHandLandmarks, \"Right\");\n        }\n    \n        \n        // Socket send data\n        let my_data = {\n            uid,\n\n            riggedPose,\n            riggedLeftHand,\n            riggedRightHand,\n            riggedFace,\n\n            transform:transforms[my_idx]\n        }\n        \n        if(flag) motion_socket.send(JSON.stringify(my_data))\n\n        // applyMovements( my_data, idx )\n    }\n\n    const applyMovements = ( data, idx ) => {\n\n        let {\n            riggedPose,\n            riggedLeftHand,\n            riggedRightHand,\n            riggedFace,\n            transform,\n        } = data\n\n\n        try{\n\n            // console.log(riggedFace)\n            rigFace(idx, riggedFace)\n        }catch{}\n\n        try{\n            \n            rigRotation(idx, \"Hips\", {...riggedPose.Hips.rotation, y: riggedPose.Hips.rotation.y + transform.r}, 0.7);\n            rigPosition(\n                \"Hips\",\n                {\n                    x: riggedPose.Hips.position.x,// Reverse direction\n                    y: riggedPose.Hips.position.y + 1, // Add a bit of height\n                    z: -riggedPose.Hips.position.z // Reverse direction\n                },\n                1,\n                0.07\n            );\n        \n            rigRotation(idx, \"Chest\", riggedPose.Spine, 0.25, .3);\n            rigRotation(idx, \"Spine\", riggedPose.Spine, 0.45, .3);\n        \n            rigRotation(idx, \"RightUpperArm\", riggedPose.RightUpperArm, 1, .3);\n            rigRotation(idx, \"RightLowerArm\", riggedPose.RightLowerArm, 1, .3);\n            rigRotation(idx, \"LeftUpperArm\", riggedPose.LeftUpperArm, 1, .3);\n            rigRotation(idx, \"LeftLowerArm\", riggedPose.LeftLowerArm, 1, .3);\n        \n            rigRotation(idx, \"LeftUpperLeg\", riggedPose.LeftUpperLeg, 1, .3);\n            rigRotation(idx, \"LeftLowerLeg\", riggedPose.LeftLowerLeg, 1, .3);\n            rigRotation(idx, \"RightUpperLeg\", riggedPose.RightUpperLeg, 1, .3);\n            rigRotation(idx, \"RightLowerLeg\", riggedPose.RightLowerLeg, 1, .3);\n        }catch{}\n\n\n        try{\n            rigRotation(idx, \"LeftHand\", {\n                // Combine pose rotation Z and hand rotation X Y\n                z: riggedPose.LeftHand.z,\n                y: riggedLeftHand.LeftWrist.y,\n                x: riggedLeftHand.LeftWrist.x\n            });\n            rigRotation(idx, \"LeftRingProximal\", riggedLeftHand.LeftRingProximal);\n            rigRotation(idx, \"LeftRingIntermediate\", riggedLeftHand.LeftRingIntermediate);\n            rigRotation(idx, \"LeftRingDistal\", riggedLeftHand.LeftRingDistal);\n            rigRotation(idx, \"LeftIndexProximal\", riggedLeftHand.LeftIndexProximal);\n            rigRotation(idx, \"LeftIndexIntermediate\", riggedLeftHand.LeftIndexIntermediate);\n            rigRotation(idx, \"LeftIndexDistal\", riggedLeftHand.LeftIndexDistal);\n            rigRotation(idx, \"LeftMiddleProximal\", riggedLeftHand.LeftMiddleProximal);\n            rigRotation(idx, \"LeftMiddleIntermediate\", riggedLeftHand.LeftMiddleIntermediate);\n            rigRotation(idx, \"LeftMiddleDistal\", riggedLeftHand.LeftMiddleDistal);\n            rigRotation(idx, \"LeftThumbProximal\", riggedLeftHand.LeftThumbProximal);\n            rigRotation(idx, \"LeftThumbIntermediate\", riggedLeftHand.LeftThumbIntermediate);\n            rigRotation(idx, \"LeftThumbDistal\", riggedLeftHand.LeftThumbDistal);\n            rigRotation(idx, \"LeftLittleProximal\", riggedLeftHand.LeftLittleProximal);\n            rigRotation(idx, \"LeftLittleIntermediate\", riggedLeftHand.LeftLittleIntermediate);\n            rigRotation(idx, \"LeftLittleDistal\", riggedLeftHand.LeftLittleDistal);\n        }catch{}\n\n        try{\n            rigRotation(idx, \"RightHand\", {\n                // Combine Z axis from pose hand and X/Y axis from hand wrist rotation\n                z: riggedPose.RightHand.z,\n                y: riggedRightHand.RightWrist.y,\n                x: riggedRightHand.RightWrist.x\n            });\n            rigRotation(idx, \"RightRingProximal\", riggedRightHand.RightRingProximal);\n            rigRotation(idx, \"RightRingIntermediate\", riggedRightHand.RightRingIntermediate);\n            rigRotation(idx, \"RightRingDistal\", riggedRightHand.RightRingDistal);\n            rigRotation(idx, \"RightIndexProximal\", riggedRightHand.RightIndexProximal);\n            rigRotation(idx, \"RightIndexIntermediate\",riggedRightHand.RightIndexIntermediate);\n            rigRotation(idx, \"RightIndexDistal\", riggedRightHand.RightIndexDistal);\n            rigRotation(idx, \"RightMiddleProximal\", riggedRightHand.RightMiddleProximal);\n            rigRotation(idx, \"RightMiddleIntermediate\", riggedRightHand.RightMiddleIntermediate);\n            rigRotation(idx, \"RightMiddleDistal\", riggedRightHand.RightMiddleDistal);\n            rigRotation(idx, \"RightThumbProximal\", riggedRightHand.RightThumbProximal);\n            rigRotation(idx, \"RightThumbIntermediate\", riggedRightHand.RightThumbIntermediate);\n            rigRotation(idx, \"RightThumbDistal\", riggedRightHand.RightThumbDistal);\n            rigRotation(idx, \"RightLittleProximal\", riggedRightHand.RightLittleProximal);\n            rigRotation(idx, \"RightLittleIntermediate\", riggedRightHand.RightLittleIntermediate);\n            rigRotation(idx, \"RightLittleDistal\", riggedRightHand.RightLittleDistal);\n        }catch{}\n\n\n        \n\n        // 移动角色位置\n        VRMs[idx].scene.position.x = transform.x\n        VRMs[idx].scene.position.z = transform.z\n    }\n\n\n\n    /* Animation Related Functions */\n    function animate() {\n        requestAnimationFrame(animate);\n      \n        VRMs.forEach(vrm=>{\n            if (vrm) {\n            // Update model to render physics\n            vrm.update(clock.getDelta());\n            }\n        })\n\n        renderer.render(scene, orbitCamera);\n    }\n\n    /* Network (Socket) */\n\n    const initSocket = () => {\n        // 从 URL Params 获取 roon name\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const roomName = urlParams.get('roomname');\n        const wss_protocol = (window.location.protocol == 'https:') ? 'wss://': 'ws://';\n        motion_socket = new WebSocket(\n            wss_protocol + window.location.host + '/ws/motion/'  + roomName + '/'\n        );\n        // 建立webchat_socket连接时触发此方法\n        motion_socket.onopen = function(e) {\n            // Do nothing\n            flag = true;\n        }\n\n        // 从后台接收到数据时触发此方法\n        motion_socket.onmessage = function(e) {\n            const data = JSON.parse(e.data);\n            let {uid:_uid} = data;\n            let idx = uids.indexOf(_uid)\n            if(idx>=0){\n                applyMovements(data, idx)\n            }else{\n                if(!(uids_loading.indexOf(_uid)>=0)){\n                    // 收到一个未知用户的信号\n                    console.log(\"cannot found uid\", _uid, uids_loading)\n                    loadVRM(_uid)\n                }\n            }\n        }\n        \n    }\n    \n\n\n\n    /* Lifecycle Hooks */\n\n    // Init HTML element reference and some mudules\n    React.useEffect(()=>{\n        getUid()\n        newVideoElement()\n        newHolistic()\n        newScene()\n        initRenderingPipeline()\n    },[])\n\n    // When videoElement is found, new \"@mediapipe/camera_utils\".Camera\n    React.useEffect(()=>{\n        if(videoElement) newCamera()\n    },[videoElement])\n\n    // When Camera is Ready, start it.\n    React.useEffect(()=>{\n        if(camera) camera.start();\n    },[camera])\n\n\n    React.useEffect(()=>{\n        if(scene){\n            newLight()\n            loadFBX()\n            loadBase()\n            loadSky()\n            animate()\n            loadVRM(uid);  \n            initSocket()  \n            // var axisHelper = new THREE.AxisHelper(250);\n            // scene.add(axisHelper);\n            }\n    },[scene])\n\n    // React.useEffect(()=>{\n    //     setInterval(() => {\n    //         // console.log(\"position\",orbitCamera.position)\n    //         console.log(\"target\",orbitControls.target)\n    //         console.log(\"transforms\",transforms[my_idx])\n    //     }, 500);\n    // },[])\n\n    React.useEffect(()=>{\n        if(holistic) initHolistic()\n    },[holistic])\n\n    return(\n        <div className='ChatRoom'>\n            <video\n                className=\"input_video\" width=\"300px\" height=\"200px\"  autoPlay muted\n                style={{\n                    position:\"absolute\",\n                    left:8,bottom:20,\n                }}\n            ></video>  \n\n            <button className=\"quit_button\" style={{ position:\"absolute\", right:30,top:30,}} \n                onClick={()=>{window.location.href=\"/chatrooms\"}}>\n                <ImportOutlined />\n            </button>\n\n            <button className=\"shop_button\" style={{ position:\"absolute\", right:30,top:30,}} \n            onClick={()=>{window.location.href=\"/shop\"}}>\n                <ShoppingCartOutlined />\n            </button>\n\n\n            <ChatBar />     \n        </div>\n    )\n}\n\nexport default ChatRoom","/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/components/Login/Login.js",["61","62","63"],"import { message, Input, Button } from 'antd'\nimport React from 'react'\nimport { getCookie, setCookie } from './cookie'\nimport './Login.css'\n\nimport 'antd/dist/antd.css';\n\nvar Login = () =>{\n\n    var [Username, setUsername] = React.useState(\"\")\n    var [loginPassword, setLoginPassword] = React.useState(\"\")\n    var [title, setTitle] = React.useState(\"\")\n\n    const login = ()=>{\n        setCookie(\"update\",new Date().toUTCString())\n        fetch(`/user/login/`,{\n            method:'POST',\n            body:JSON.stringify({\n                username: Username,\n                password: loginPassword,\n            })\n        }).then(res=>{\n            if(res.status===200){\n                message.success(\"Successfully Login!\")\n                setTimeout(() => {\n                    window.location.href=\"/chatrooms\"\n                }, 1000);\n            }else if (res.status===403){\n                message.warn(\"Login Fail! Check Your Account, Password and Try Again!\")\n            }else{\n                message.warn(\"Unknown Error! Try Again!\")\n            }\n        }).then(data=>{\n\n        })\n    }\n\n   \n\n\n    return(\n        <div className='Login'>\n            <div className='Login-header'>\n                <div style={{\"fontSize\":\"calc(5vh + 30px)\", fontFamily:\"Cochin\"}}>Chat Verse</div>\n                <div style={{\"fontSize\":\"calc(1vh + 15px)\", fontFamily:\"Cochin\"}}>The Best Way for Everyone To Experience Metaverse\n                <br></br> Click Right Side to Begin\n                </div>\n            </div>\n            <div className='Login-form'>\n                <form>\n                    <div style={{fontSize:\"calc(1vh + 25px)\", fontFamily:\"Cochin\", textAlign:\"center\"}}>Welcome Back!</div>\n                    <div className='Login-form-username'>\n                        <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Username</div>\n                        <Input style={{\"height\":\"2rem\"}} id='username' type=\"text\" value={Username} onChange={e=>setUsername(e.target.value)}/>\n                    </div>\n                    <div className='Login-form-password'>\n                        <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Password</div>\n                        <Input style={{\"height\":\"2rem\"}} id='password' type=\"password\" visibilityToggle value={loginPassword} onChange={e=>setLoginPassword(e.target.value)}/>\n                    </div>\n                    <div className='Login-form-submit' style={{fontFamily:\"Cochin\"}}>\n                        <Button id='submit' type='button' onClick={()=>{login();}}>Sign in</Button>\n                    </div>\n                </form>\n                <div className='Login-Sign-in'>\n                     <a href=\"/sign\" style={{color:\"blueviolet\", fontFamily:\"Cochin\"}}><u>Sign up in ChatVerse</u></a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login","/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/components/Sign/Sign.js",["64","65"],"import { Input, Button, message } from 'antd'\nimport React from 'react'\nimport { API } from '../../App'\nimport { setCookie } from '../Login/cookie'\n\nimport './Sign.css'\n\nvar Sign = () =>{\n    \n    var [Username, setUsername] = React.useState()\n    var [SignPassword, setSignPassword] = React.useState()\n    var [SignPasswordConfir, setSignPasswordConfir] = React.useState()\n\n    const sign = () =>{\n        if(SignPassword===SignPasswordConfir){\n            let bodydata = {\n                username: Username,\n                password: SignPassword,\n            }\n            setCookie(\"update\",new Date().toUTCString())\n            fetch(`/user/sign/`,{\n                method:'POST',\n                body: JSON.stringify(bodydata),\n            })\n            .then(response=>{\n                if (response.status===200) {\n                    message.success(\"Sussessfully Sign! Return Login pagr to Login\")\n                    setTimeout(() => {\n                        window.location.href=\"/login\"\n                    }, 1000);\n                }else if (response.status===403){\n                    message.warn(\"User Already Exist, Please Change Your Username\")\n                }else{\n                    message.warn(\"User already exists\") \n                }\n            })\n        }\n        else{\n            message.warn(\"Inconsistent Password!\")\n            setTimeout(() => {\n                window.location.reload()\n            }, 2000);\n        }\n    }\n\n    return(\n        <div className='Sign'>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n                <div style={{\n                    \"fontSize\":\"calc(4vh + 25px)\", color:\"white\", fontFamily:\"Cochin\",\n                    marginTop:\"10vh\", fontFamily:\"Cochin\"\n                }}>Sign up</div>\n                <div>\n                    <form className='Sign-form'>\n                        <div className='Sign-form-username'>\n                            <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Username</div>\n                            <Input style={{\"height\":\"2rem\"}} id='username' type=\"text\" value={Username} onChange={e=>setUsername(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-password'>\n                            <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Password</div>\n                            <Input style={{\"height\":\"2rem\"}} id='password' type=\"password\" value={SignPassword} onChange={e=>setSignPassword(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-passwordConfir'>\n                            <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Confirm Password</div>\n                            <Input style={{\"height\":\"2rem\"}} id='passwordConfir' type=\"password\" value={SignPasswordConfir} onChange={e=>setSignPasswordConfir(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-submit'>\n                            <Button style={{cursor:\"pointer\", fontFamily:\"Cochin\"}} id='submit' type=\"button\" onClick={sign}>Sign up</Button>\n                        </div>\n                        <div className='Sign-Sign-in'>\n                            <a href=\"/login\" style={{color:\"blueviolet\", fontFamily:\"Cochin\"}}><u>Sign in ChatVerse</u></a>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Sign","/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/components/ChatRooms/ChatRooms.js",[],"/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/components/ChatRoom/ChatBar.js",["66","67","68","69"],"/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/components/Login/cookie.js",["70"],"export function setCookie(name,value)\n{\n    var Days = 30;\n    var exp = new Date();\n    exp.setTime(exp.getTime() + Days*24*60*60*1000);\n    document.cookie = name + \"=\"+ escape (value) + \";path=/;expires=\" + exp.toGMTString();\n}\n\nexport function getCookie(name)\n{\n    var arr,reg=new RegExp(\"(^| )\"+name+\"=([^;]*)(;|$)\");\n \n    if(arr=document.cookie.match(reg))\n \n        return unescape(arr[2]);\n    else\n        return null;\n}\n\nexport function delCookie(name)\n{\n    var exp = new Date();\n    exp.setTime(exp.getTime() - 1);\n    var cval=getCookie(name);\n    if(cval!=null)\n        document.cookie= name + \"=\"+cval+\";path=/;expires=\"+exp.toGMTString();\n}","/Users/yanghaowen/Desktop/chat_verse/frontend/src/app/components/Shop/Shop.js",["71","72","73","74","75"],"import { UserOutlined } from '@ant-design/icons'\nimport { RestOutlined } from '@ant-design/icons'\nimport { SendOutlined } from '@ant-design/icons'\nimport { AccountBookFilled, ImportOutlined } from '@ant-design/icons'\nimport { Input, Button, message, Upload } from 'antd'\n\nimport React from 'react'\nimport { setCookie } from '../Login/cookie'\n\nimport './Shop.css'\n\nexport function getCookie(name)\n{\n    var arr,reg=new RegExp(\"(^| )\"+name+\"=([^;]*)(;|$)\");\n \n    if(arr=document.cookie.match(reg))\n \n        return unescape(arr[2]);\n    else\n        return null;\n}\n\nvar Shop = () =>{\n    \n    const [ avatar_list, setAvatarList ] = React.useState([])\n    const [ avatar, setAvatar ] = React.useState(null)\n    const [ title, setTitle ] = React.useState(\"\")\n    const [ uid, setUid ] = React.useState(undefined)\n\n    const [ src, setAvatarSrc ] = React.useState(\"\")\n    const [ cover, setAvatarCover ] = React.useState(\"\")\n\n    \n\n\n    //TODO\n    const getAvatarList = ()=>{\n        setCookie(\"update\",new Date().toUTCString())\n        fetch(`/user/avatar/`,{\n            method:'GET',\n        }).then(res=>{\n            if(res.status===200){\n                return res.json()\n            }else{\n                message.warn(\"get Avatar list Fail\")\n            }\n        }).then(data=>{\n            setAvatarList(data.result)\n        })\n    }\n\n    // //TODO\n    const getUsingAvatar = ()=>{\n        setCookie(\"update\",new Date().toUTCString())\n        fetch(`/user/avatar/?uid=${uid}`,{\n            method:'GET',\n        }).then(res=>{\n            if(res.status===200){\n                return res.json()\n            }else{\n                message.warn(\"get Avatar list Fail\")\n            }\n        }).then(data=>{\n            setAvatar(data.result)\n        }) \n    }\n\n    const uploadVRM = (file) => new Promise(resolve => {\n        if(file){\n            var timestamp = new Date().getTime();\n            var img_id = \"Avatar-VRM-\"+timestamp\n            var Bucket = 'ciwk-1301216399';\n            var Region = 'ap-guangzhou';     /* 存储桶所在地域，必须字段 */\n            console.log(file)\n\n            var COS = require('cos-js-sdk-v5');\n            \n            // 初始化实例\n            var cos = new COS({\n                getAuthorization: function (options, callback) {\n                    fetch('/user/get_cos_credential')\n                    .then(res => res.json())\n                    .then(data => {\n                        var credentials = data && data.credentials;\n                        if (!data || !credentials) return console.error('credentials invalid');\n                        callback({\n                            TmpSecretId: credentials.tmpSecretId,\n                            TmpSecretKey: credentials.tmpSecretKey,\n                            XCosSecurityToken: credentials.sessionToken,\n                            StartTime: data.startTime,\n                            ExpiredTime: data.expiredTime,\n                        });\n                    })\n                }\n            });\n            if (cos){\n                cos.putObject({\n                    Bucket: Bucket, /* 必须 */\n                    Region: Region,     /* 存储桶所在地域，必须字段 */\n                    Key: img_id,//result.key,              /* 必须 */\n                    StorageClass: 'STANDARD',\n                    Body: file, // 上传文件对象\n                    onProgress: function (progressData) {\n                        console.log(\"Progress: \",JSON.stringify(progressData));\n                        message.loading(\"Progress: \"+progressData.percent)\n                    }\n                }, function(err, data) {\n                    console.log(err || \"http://\"+data.Location);\n                    if(data){\n                        let url = \"http://\"+data.Location;\n                        setAvatarSrc(url)\n                    }else{\n                        //当上传失败时\n                    }\n                })\n            }else{\n                //当建立cos对象失败时\n                console.log(\"Fail\")\n            }\n        }else{\n            resolve(false)\n        }\n    })\n\n    const uploadCover = (file) => new Promise(resolve => {\n        if(file){\n            var timestamp = new Date().getTime();\n            var img_id = \"Avatar-VRM-\"+timestamp\n            var Bucket = 'ciwk-1301216399';\n            var Region = 'ap-guangzhou';     /* 存储桶所在地域，必须字段 */\n            console.log(file)\n\n            var COS = require('cos-js-sdk-v5');\n            \n            // 初始化实例\n            var cos = new COS({\n                getAuthorization: function (options, callback) {\n                    fetch('/user/get_cos_credential')\n                    .then(res => res.json())\n                    .then(data => {\n                        var credentials = data && data.credentials;\n                        if (!data || !credentials) return console.error('credentials invalid');\n                        callback({\n                            TmpSecretId: credentials.tmpSecretId,\n                            TmpSecretKey: credentials.tmpSecretKey,\n                            XCosSecurityToken: credentials.sessionToken,\n                            StartTime: data.startTime,\n                            ExpiredTime: data.expiredTime,\n                        });\n                    })\n                }\n            });\n            if (cos){\n                cos.putObject({\n                    Bucket: Bucket, /* 必须 */\n                    Region: Region,     /* 存储桶所在地域，必须字段 */\n                    Key: img_id,//result.key,              /* 必须 */\n                    StorageClass: 'STANDARD',\n                    Body: file, // 上传文件对象\n                    onProgress: function (progressData) {\n                        console.log(\"Progress: \",JSON.stringify(progressData));\n                        message.loading(\"Progress: \"+progressData.percent)\n                    }\n                }, function(err, data) {\n                    console.log(err || \"http://\"+data.Location);\n                    if(data){\n                        let url = \"http://\"+data.Location;\n                        setAvatarCover(url)\n                    }else{\n                        //当上传失败时\n                    }\n                })\n            }else{\n                //当建立cos对象失败时\n                console.log(\"Fail\")\n            }\n        }else{\n            resolve(false)\n        }\n    })\n\n    const createAvatar = (file) => new Promise(resolve => {\n\n        if(!cover || !src || !title){\n            message.info(\"你他妈缺啊\")\n            return\n        }\n        let bodyData = {\n            cover,\n            src,\n            title,\n        }\n\n        fetch(\"/user/avatar/\",{\n            method:\"POST\",\n            body:JSON.stringify(bodyData)\n        })\n        .then(response=>{\n            if (response.status===200) {\n                getUsingAvatar()\n                // return response.json()\n            } else if (response.status!==200){\n                message.error(\"提交失败？\")\n            }\n        })\n    })\n\n    //TODO\n    React.useEffect(()=>{\n        console.log(getCookie('uid'))\n        setUid(getCookie('uid'))\n    },[])\n\n    React.useEffect(()=>{\n        if(uid){\n            getAvatarList()\n            getUsingAvatar()\n        }\n    },[uid])\n\n\n    return(\n        <div className='Shop'>\n            <button className='back' onClick={()=>\n                { window.history.back(-1)}}><ImportOutlined />\n            </button>\n            <div className='Shop-Up'>\n                <div className='Shop-Upload'>\n                    <div style={{\n                            \"fontSize\":\"calc(3vh + 25px)\", color:\"white\", fontFamily:\"Cohina\",\n                            marginTop:\"8vh\"\n                        }}>\n                            Upload Avatar\n                    </div>\n                    <div style={{flexDirection:\"row\", justifyContent:\"center\", width:\"100%\", marginTop:\"20px\"}}>\n                        <Input style={{\n                            width:\"50%\",\n                            borderColor:\"white\",\n                            borderRadius: \"5px\",\n                            borderTopRightRadius:\"0px\",\n                            borderBottomRightRadius:\"0px\",\n                        }} value={title} onChange={e=>{setTitle(e.target.value)}}/>\n\n                        <Button style={{\n                            backgroundColor:\"blueviolet\",\n                            borderColor:\"blueviolet\",\n                            borderRadius: \"5px\",\n                            borderTopLeftRadius:\"0px\",\n                            borderBottomLeftRadius:\"0px\",\n                        }} type=\"primary\" onClick={()=>{createAvatar()}}>Create</Button>\n                    </div>\n                    <div style={{width:\"100%\", display:\"flex\", flexDirection:\"row\",justifyContent:\"center\", marginTop:\"20px\"}}>\n                        <Upload\n                            showUploadList={false}\n                            action={uploadVRM}\n                        >\n                            <Button type=\"primary\" icon={<AccountBookFilled/>} \n                                onClick={uploadVRM}style={{\n                                    backgroundColor:\"blueviolet\",\n                                    borderColor:\"blueviolet\",\n                                    borderRadius: \"5px\",\n                                }}\n                            >\n                                {src?'VRM File OK':'Upload VRM'}\n                            </Button>\n                        </Upload>\n\n                        <Upload\n                            showUploadList={false}\n                            action={uploadCover}\n                        >\n                            <Button type=\"primary\" icon={<AccountBookFilled/>} \n                                onClick={uploadCover}style={{\n                                    backgroundColor:\"blueviolet\",\n                                    borderColor:\"blueviolet\",\n                                    borderRadius: \"5px\",\n                                    marginLeft:\"100px\"\n                                }}\n                            >\n                                {cover?'Cover Image OK':'Upload Image'}\n                            </Button>\n                        </Upload>\n                    </div>\n                </div>\n                <div className='Shop-My'>\n                    <div style={{\n                            \"fontSize\":\"calc(3vh + 25px)\", color:\"white\", fontFamily:\"Cohina\",\n                            marginTop:\"8vh\"\n                        }}>\n                        My Avatar\n                    </div>\n                    <div style={{width:\"100%\",display:\"flex\", flexDirection:\"row\",justifyContent:\"center\"}}>\n                        {avatar&&\n                            <div className='Avatar' style={{width:\"100px\", height:\"100px\", marginRight:\"70px\", marginTop:\"20px\"}}>\n                                {/* {avatar.title} */}\n                                <img style={{width:\"100%\", height:\"100%\", borderRadius:\"5px\"}} src={avatar.cover} alt={avatar.title}></img>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n            <div className='Shop-Down'>\n                <div style={{\n                        \"fontSize\":\"calc(3vh + 25px)\", color:\"white\", fontFamily:\"Cohina\",\n                        marginTop:\"8vh\"\n                    }}>\n                    Select Avatar\n                </div> \n                <div className='Shop-Avatar-List'>\n                    {avatar_list.map(a=>{\n                        return(\n                            <div style={{marginLeft:\"100px\"}} onClick={()=>{\n                                fetch(`/user/use_avatar/`,{\n                                    method:'POST',\n                                    body:JSON.stringify({\n                                        uid: uid,\n                                        avatar_id: a.id,\n                                    })\n                                })\n                                .then(res=>{if(res.status===200){\n                                    getAvatarList()\n                                    getUsingAvatar()\n                                }})\n                            }}>\n                                {/* <div style={{width:\"100%\", textAlign:\"center\"}}>\n                                    {a.title}\n                                </div> */}\n                                <div className='Avatar'>\n                                    <img style={{width:\"100%\", height:\"100%\", borderRadius:\"5px\"}} src={a.cover} alt={a.title}></img>\n                                </div>\n\n                                \n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Shop",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":14,"column":10,"nodeType":"82","messageId":"83","endLine":14,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":279,"column":25,"nodeType":"82","messageId":"86","endLine":279,"endColumn":26},{"ruleId":"87","severity":1,"message":"88","line":280,"column":30,"nodeType":"89","messageId":"90","endLine":280,"endColumn":32},{"ruleId":"87","severity":1,"message":"88","line":294,"column":30,"nodeType":"89","messageId":"90","endLine":294,"endColumn":32},{"ruleId":"87","severity":1,"message":"88","line":308,"column":30,"nodeType":"89","messageId":"90","endLine":308,"endColumn":32},{"ruleId":"87","severity":1,"message":"88","line":311,"column":30,"nodeType":"89","messageId":"90","endLine":311,"endColumn":32},{"ruleId":"80","severity":1,"message":"91","line":371,"column":15,"nodeType":"82","messageId":"83","endLine":371,"endColumn":20},{"ruleId":"87","severity":1,"message":"88","line":598,"column":56,"nodeType":"89","messageId":"90","endLine":598,"endColumn":58},{"ruleId":"92","severity":1,"message":"93","line":643,"column":7,"nodeType":"94","endLine":643,"endColumn":21,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":663,"column":7,"nodeType":"94","endLine":663,"endColumn":14,"suggestions":"97"},{"ruleId":"92","severity":1,"message":"98","line":675,"column":7,"nodeType":"94","endLine":675,"endColumn":17,"suggestions":"99"},{"ruleId":"80","severity":1,"message":"100","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":19},{"ruleId":"80","severity":1,"message":"101","line":12,"column":10,"nodeType":"82","messageId":"83","endLine":12,"endColumn":15},{"ruleId":"80","severity":1,"message":"102","line":12,"column":17,"nodeType":"82","messageId":"83","endLine":12,"endColumn":25},{"ruleId":"80","severity":1,"message":"103","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":13},{"ruleId":"104","severity":1,"message":"105","line":51,"column":39,"nodeType":"106","messageId":"90","endLine":51,"endColumn":49},{"ruleId":"80","severity":1,"message":"107","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"87","severity":1,"message":"88","line":23,"column":56,"nodeType":"89","messageId":"90","endLine":23,"endColumn":58},{"ruleId":"80","severity":1,"message":"108","line":78,"column":11,"nodeType":"82","messageId":"83","endLine":78,"endColumn":25},{"ruleId":"92","severity":1,"message":"109","line":89,"column":7,"nodeType":"94","endLine":89,"endColumn":9,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":13,"column":8,"nodeType":"113","messageId":"114","endLine":13,"endColumn":38},{"ruleId":"80","severity":1,"message":"115","line":1,"column":10,"nodeType":"82","messageId":"83","endLine":1,"endColumn":22},{"ruleId":"80","severity":1,"message":"116","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":22},{"ruleId":"80","severity":1,"message":"117","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":22},{"ruleId":"111","severity":1,"message":"112","line":16,"column":8,"nodeType":"113","messageId":"114","endLine":16,"endColumn":38},{"ruleId":"92","severity":1,"message":"118","line":219,"column":7,"nodeType":"94","endLine":219,"endColumn":12,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'PoweroffOutlined' is defined but never used.","Identifier","unusedVar","no-redeclare","'e' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'remap' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'newCamera'. Either include it or remove the dependency array.","ArrayExpression",["122"],"React Hook React.useEffect has missing dependencies: 'animate', 'initSocket', 'loadBase', 'loadFBX', 'loadSky', 'loadVRM', and 'newLight'. Either include them or remove the dependency array.",["123"],"React Hook React.useEffect has a missing dependency: 'initHolistic'. Either include it or remove the dependency array.",["124"],"'getCookie' is defined but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'API' is defined but never used.","no-dupe-keys","Duplicate key 'fontFamily'.","ObjectExpression","'useEffect' is defined but never used.","'handleEnterKey' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'initSocket'. Either include it or remove the dependency array.",["125"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'UserOutlined' is defined but never used.","'RestOutlined' is defined but never used.","'SendOutlined' is defined but never used.","React Hook React.useEffect has a missing dependency: 'getUsingAvatar'. Either include it or remove the dependency array.",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [newCamera, videoElement]",{"range":"137","text":"138"},"Update the dependencies array to be: [animate, initSocket, loadBase, loadFBX, loadSky, loadVRM, newLight, scene]",{"range":"139","text":"140"},"Update the dependencies array to be: [holistic, initHolistic]",{"range":"141","text":"142"},"Update the dependencies array to be: [initSocket]",{"range":"143","text":"144"},"Update the dependencies array to be: [getUsingAvatar, uid]",{"range":"145","text":"146"},[23210,23224],"[newCamera, videoElement]",[23674,23681],"[animate, initSocket, loadBase, loadFBX, loadSky, loadVRM, newLight, scene]",[24027,24037],"[holistic, initHolistic]",[2449,2451],"[initSocket]",[7186,7191],"[getUsingAvatar, uid]"]
[{"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/index.js":"1","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/reportWebVitals.js":"2","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/App.js":"3","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Sign/Sign.js":"4","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatRoom.js":"5","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/Login.js":"6","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRooms/ChatRooms.js":"7","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/cookie.js":"8","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatBar.js":"9","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Shop/Shop.js":"10"},{"size":505,"mtime":1650102695497,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1650102695497,"results":"13","hashOfConfig":"12"},{"size":1008,"mtime":1650261077011,"results":"14","hashOfConfig":"12"},{"size":3474,"mtime":1650265966669,"results":"15","hashOfConfig":"12"},{"size":24177,"mtime":1650268685735,"results":"16","hashOfConfig":"12"},{"size":2876,"mtime":1650249947303,"results":"17","hashOfConfig":"12"},{"size":7723,"mtime":1650265966670,"results":"18","hashOfConfig":"12"},{"size":658,"mtime":1650102695437,"results":"19","hashOfConfig":"12"},{"size":3001,"mtime":1650263046881,"results":"20","hashOfConfig":"12"},{"size":2939,"mtime":1650268588921,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1nmmsgo",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":2,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/index.js",[],["48","49"],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/reportWebVitals.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/App.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Sign/Sign.js",["50","51"],"import { Input, Button, message } from 'antd'\nimport React from 'react'\nimport { API } from '../../App'\nimport { setCookie } from '../Login/cookie'\n\nimport './Sign.css'\n\nvar Sign = () =>{\n    \n    var [Username, setUsername] = React.useState()\n    var [SignPassword, setSignPassword] = React.useState()\n    var [SignPasswordConfir, setSignPasswordConfir] = React.useState()\n\n    const sign = () =>{\n        if(SignPassword===SignPasswordConfir){\n            let bodydata = {\n                username: Username,\n                password: SignPassword,\n            }\n            setCookie(\"update\",new Date().toUTCString())\n            fetch(`/user/sign/`,{\n                method:'POST',\n                body: JSON.stringify(bodydata),\n            })\n            .then(response=>{\n                if (response.status===200) {\n                    message.success(\"Sussessfully Sign! Return Login pagr to Login\")\n                    setTimeout(() => {\n                        window.location.href=\"/login\"\n                    }, 1000);\n                }else if (response.status===403){\n                    message.warn(\"User Already Exist, Please Change Your Username\")\n                }else{\n                    message.warn(\"User already exists\") \n                }\n            })\n        }\n        else{\n            message.warn(\"Inconsistent Password!\")\n            setTimeout(() => {\n                window.location.reload()\n            }, 2000);\n        }\n    }\n\n    return(\n        <div className='Sign'>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n                <div style={{\n                    \"fontSize\":\"calc(4vh + 25px)\", color:\"white\", fontFamily:\"Cochin\",\n                    marginTop:\"10vh\", fontFamily:\"Cochin\"\n                }}>Sign up</div>\n                <div>\n                    <form className='Sign-form'>\n                        <div className='Sign-form-username'>\n                            <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Username</div>\n                            <Input style={{\"height\":\"2rem\"}} id='username' type=\"text\" value={Username} onChange={e=>setUsername(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-password'>\n                            <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Password</div>\n                            <Input style={{\"height\":\"2rem\"}} id='password' type=\"password\" value={SignPassword} onChange={e=>setSignPassword(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-passwordConfir'>\n                            <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Confirm Password</div>\n                            <Input style={{\"height\":\"2rem\"}} id='passwordConfir' type=\"password\" value={SignPasswordConfir} onChange={e=>setSignPasswordConfir(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-submit'>\n                            <Button style={{cursor:\"pointer\", fontFamily:\"Cochin\"}} id='submit' type=\"button\" onClick={sign}>Sign up</Button>\n                        </div>\n                        <div className='Sign-Sign-in'>\n                            <a href=\"/login\" style={{color:\"blueviolet\", fontFamily:\"Cochin\"}}><u>Sign in ChatVerse</u></a>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Sign","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatRoom.js",["52","53","54","55","56","57","58","59","60","61"],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/Login.js",["62","63","64"],"import { message, Input, Button } from 'antd'\nimport React from 'react'\nimport { getCookie, setCookie } from './cookie'\nimport './Login.css'\n\nimport 'antd/dist/antd.css';\n\nvar Login = () =>{\n\n    var [Username, setUsername] = React.useState(\"\")\n    var [loginPassword, setLoginPassword] = React.useState(\"\")\n    var [title, setTitle] = React.useState(\"\")\n\n    const login = ()=>{\n        setCookie(\"update\",new Date().toUTCString())\n        fetch(`/user/login/`,{\n            method:'POST',\n            body:JSON.stringify({\n                username: Username,\n                password: loginPassword,\n            })\n        }).then(res=>{\n            if(res.status===200){\n                message.success(\"Successfully Login!\")\n                setTimeout(() => {\n                    window.location.href=\"/chatrooms\"\n                }, 1000);\n            }else if (res.status===403){\n                message.warn(\"Login Fail! Check Your Account, Password and Try Again!\")\n            }else{\n                message.warn(\"Unknown Error! Try Again!\")\n            }\n        }).then(data=>{\n\n        })\n    }\n\n   \n\n\n    return(\n        <div className='Login'>\n            <div className='Login-header'>\n                <div style={{\"fontSize\":\"calc(5vh + 30px)\", fontFamily:\"Cochin\"}}>Chat Verse</div>\n                <div style={{\"fontSize\":\"calc(1vh + 15px)\", fontFamily:\"Cochin\"}}>The Best Way for Everyone To Experience Metaverse\n                <br></br> Click Right Side to Begin\n                </div>\n            </div>\n            <div className='Login-form'>\n                <form>\n                    <div style={{fontSize:\"calc(1vh + 25px)\", fontFamily:\"Cochin\", textAlign:\"center\"}}>Welcome Back!</div>\n                    <div className='Login-form-username'>\n                        <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Username</div>\n                        <Input style={{\"height\":\"2rem\"}} id='username' type=\"text\" value={Username} onChange={e=>setUsername(e.target.value)}/>\n                    </div>\n                    <div className='Login-form-password'>\n                        <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Password</div>\n                        <Input style={{\"height\":\"2rem\"}} id='password' type=\"password\" visibilityToggle value={loginPassword} onChange={e=>setLoginPassword(e.target.value)}/>\n                    </div>\n                    <div className='Login-form-submit' style={{fontFamily:\"Cochin\"}}>\n                        <Button id='submit' type='button' onClick={()=>{login();}}>Sign in</Button>\n                    </div>\n                </form>\n                <div className='Login-Sign-in'>\n                     <a href=\"/sign\" style={{color:\"blueviolet\", fontFamily:\"Cochin\"}}><u>Sign up in ChatVerse</u></a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRooms/ChatRooms.js",["65"],"import { message, Input, Button } from 'antd'\nimport { setCookie } from '../Login/cookie'\nimport React from 'react'\n\nimport './ChatRooms.css'\n\nconst ChatRooms = () =>{\n    const [ createRoomName, setCreateRoomName ] = React.useState(\"\")\n    const [ verse_list, setVerseList ] = React.useState([])\n    const [ P_verse_list, setP_VerseList ] = React.useState([])\n\n\n    const createRoom = ()=>{\n        if (createRoomName===\"\"){\n            message.warn(\"Room Name Cannot Be Empty!\")\n        }else{\n            setCookie(\"update\",new Date().toUTCString())\n            fetch(`/chat/createRoom/`,{\n                method:'POST',\n                body:JSON.stringify({\n                    title:createRoomName\n                })\n            }).then(res=>{\n                if(res.status===200){\n                    message.success(\"Succfssfully Create Room\")\n                    return res.json()\n                    // setTimeout(() => {\n                    //     console.log(res)\n                    //     window.location.href=\"/chatroom/?room_name=\"+res.json()['room_name']\n                    // }, 1000);\n                }else if (res.status===403){\n                    message.warn(\"Create Room Fail\")\n                }else if (res.status===405){\n                    message.warn(\"Chat Room Already Exist\")\n                }else{\n                    message.warn(\"Create Room Fail\")\n                }\n            }).then(data=>{\n                if (data){\n                    // window.location.href=\"/chatroom/?room_name=\"+data.room_name\n                    window.location.reload()\n                }\n                \n            })\n        }\n    }\n\n    const joinRoom = (room_name)=>{\n        setCookie(\"update\",new Date().toUTCString())\n        fetch(`/chat/joinRoom/`,{\n            method:'POST',\n            body:JSON.stringify({\n                room_name:room_name\n            })\n        }).then(res=>{\n            if(res.status===200){\n                message.success(\"Succfssfully Join Room\")\n                window.location.href=\"/chatroom/?room_name=\"+room_name\n            }else{\n                message.warn(\"Join Room Fail\")\n            }\n        }).then(data=>{\n            if(data){\n            }\n        })\n    }\n\n    const deleteRoom = (room_name)=>{\n        setCookie(\"update\",new Date().toUTCString())\n        fetch(`/chat/deleteRoom/`,{\n            method:'POST',\n            body:JSON.stringify({\n                room_name:room_name\n            })\n        }).then(res=>{\n            if(res.status===200){\n                message.success(\"Succfssfully delete Room\")\n                window.location.reload()\n            }else{\n                message.warn(\"delete Room Fail\")\n            }\n        }).then(data=>{\n\n        })\n    }\n\n    const get_verse_list = ()=>{\n        fetch(`/chat/verse_list/`,{\n            method:'GET',\n        }).then(res=>{\n            if(res.status===200){\n                return res.json()\n            }else{\n                message.warn(\"get verse list Fail\")\n            }\n        }).then(data=>{\n            setVerseList(data.result)\n        })\n    }\n\n    const get_personal_verse_list = (uid)=>{\n        fetch(`/chat/verse_list/?filter_uid=true`,{\n            method:'GET',\n        }).then(res=>{\n            if(res.status===200){\n                return res.json()\n            }else{\n                message.warn(\"get personal verse list Fail\")\n            }\n        }).then(data=>{\n            setP_VerseList(data.result)\n        })\n    }\n\n    React.useEffect(()=>{\n        get_verse_list()\n        get_personal_verse_list()\n    },[])\n\n\n    return(\n        <div className='ChatRooms'>\n            <div className='ChatRooms-My'>\n                <div className='ChatRooms-My-Add'>\n                    <div style={{\n                            \"fontSize\":\"calc(3vh + 25px)\", color:\"white\", fontFamily:\"Cohina\",\n                            marginTop:\"8vh\"\n                        }}>\n                            Create a Verse\n                    </div>\n                    <div >\n                        <input placeholder=\"Room Name\" id='createRoom-input' style={{fontFamily:\"Cochin\", height:'6vh', width:'24vw',\n                        backgroundColor: 'rgba(255, 255, 255, 0.7)', borderRadius: '10px'}} value={createRoomName} onChange={e=>{\n                        setCreateRoomName(e.target.value)}}>\n                        </input>\n                    </div>\n\n                    <div className='createRoom-submit' style={{fontFamily:\"Cochin\"}}>\n                        <button style={{fontFamily:\"Cochin\", width:'8vw', height:'6vh',                       \n                        backgroundColor: 'rgba(255, 255, 255, 0.5)', borderRadius: '10px'}}  \n                        onClick={()=>{createRoom();console.log(createRoomName);}}>Create</button>\n                    </div>\n\n\n                </div>\n                <div style={{\n                        \"fontSize\":\"calc(3vh + 25px)\", color:\"white\", fontFamily:\"Cohina\",\n                        marginTop:\"4vh\"\n                    }}>\n                        My Verse\n                </div>\n\n\n                <div className='ChatRooms-My-VerseList'>\n                    {P_verse_list.map(verse=>{\n                        return(\n                            <div className='ChatRooms-My-VerseList-Verse' onClick={()=>{joinRoom(verse.room_name);}}>\n                                <div  style={{\"flexDirection\":\"column\", fontFamily:\"Cohina\"}}>\n                                    <div className='ChatRooms-My-VerseList-Verse-header' >\n                                        {verse.title}'s Chat Room\n                                    </div>\n                                    {/* <div className='ChatRooms-My-VerseList-Verse-content'>\n                                        {verse.membersCount} members active\n                                    </div> */}\n                                </div>\n                                <div style={{\"flexDirection\":\"column\" , fontFamily:\"Cohina\", width:'100px'}}>\n                                    {/* <Button type=\"link\" onClick={()=>{startRoom(verse.room_name);}}>Start Verse</Button> */}\n                                    <Button type=\"link\" onClick={()=>{deleteRoom(verse.room_name);}}>Delete Verse</Button>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n\n\n\n\n            </div>\n            <div style={{flexDirection:\"column\"}}>\n                <div style={{\n                        \"fontSize\":\"calc(3vh + 25px)\", color:\"white\", fontFamily:\"Cochin\" ,\n                        marginTop:\"8vh\"\n                    }}>\n                        The Verse World\n                </div>\n\n\n\n                <div className='ChatRooms-VerseList' style={{fontFamily:\"Cochin\"}}>\n                    {verse_list.map(verse=>{\n                        return(\n                            <div className='ChatRooms-VerseList-Verse'  onClick={()=>{joinRoom(verse.room_name);}}>\n                                <div className='ChatRooms-VerseList-Verse-header'>\n                                    {verse.title}\n                                </div>\n                                <div className='ChatRooms-VerseList-Verse-content'>\n                                    {verse.n_member} users visited.\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n\n\n\n            </div>\n\n            <button className=\"quit\" \n                onClick={()=>{window.location.href=\"/login\"}}>\n                    Quit\n            </button>\n\n\n            \n        </div>\n    )\n}\n\nexport default ChatRooms","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/cookie.js",["66"],"export function setCookie(name,value)\n{\n    var Days = 30;\n    var exp = new Date();\n    exp.setTime(exp.getTime() + Days*24*60*60*1000);\n    document.cookie = name + \"=\"+ escape (value) + \";path=/;expires=\" + exp.toGMTString();\n}\n\nexport function getCookie(name)\n{\n    var arr,reg=new RegExp(\"(^| )\"+name+\"=([^;]*)(;|$)\");\n \n    if(arr=document.cookie.match(reg))\n \n        return unescape(arr[2]);\n    else\n        return null;\n}\n\nexport function delCookie(name)\n{\n    var exp = new Date();\n    exp.setTime(exp.getTime() - 1);\n    var cval=getCookie(name);\n    if(cval!=null)\n        document.cookie= name + \"=\"+cval+\";path=/;expires=\"+exp.toGMTString();\n}","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatBar.js",["67","68","69"],"import React, { useEffect } from \"react\";\nimport \"./ChatBar.css\"\n\nvar idx_max = 0\n\nvar chat_socket = null;\n\nvar timeout\n\nconst ChatBar = () => {\n\n    const [ text, setText ] = React.useState(\"\")\n\n\n\n    React.useEffect(()=>{\n        initSocket()\n    },[])\n\n    const [ messages, setMessages ] = React.useState([])\n\n    const initSocket = () => {\n        // 从 URL Params 获取 roon name\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const roomName = urlParams.get('roomname');\n        const wss_protocol = (window.location.protocol == 'https:') ? 'wss://': 'ws://';\n        chat_socket = new WebSocket(\n            wss_protocol + window.location.host + '/ws/chat/'  + roomName + '/'\n        );\n\n        console.log(wss_protocol + window.location.host + '/ws/chat/'  + roomName + '/')\n        // 建立webchat_socket连接时触发此方法\n        chat_socket.onopen = function(e) {\n            // Do nothing\n        }\n\n        // 从后台接收到数据时触发此方法\n        chat_socket.onmessage = function(e) {\n            const data = JSON.parse(e.data);\n            console.log(messages)\n            \n            \n            setMessages(messages => {\n                let msgs = messages.map(m=>m)\n                msgs.push({...data, idx:idx_max})\n                if(msgs.length>5){\n                    msgs = msgs.slice(1)\n                }\n                return msgs\n            })\n            idx_max += 1\n            \n            if(timeout) clearTimeout(timeout)\n            timeout = setTimeout(()=>{\n                setMessages([])\n                clearTimeout(timeout)\n            },5000,idx_max) // 5秒后全部消息消失\n            \n        };\n        \n    }\n\n    // const removeMsg = (idx) => {\n    //     let msgs = []\n    //     messages.forEach(m=>{if(idx===m.idx)msgs.push(m)})\n    //     setMessages(msgs)\n    // }\n\n\n    return (\n        <div className=\"ChatBar\">\n            <div className=\"ChatBar-messages\">\n                {messages.map(m=>(\n                    <div key={Math.random()} className=\"ChatBar-message\">\n                        {m.idx}: {m.message}\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"ChatBar-actions\">\n                <input placeholder=\"Massage\" style={{fontFamily:\"Cochin\", borderRadius: '10px'}} value={text} onChange={e=>{\n                    setText(e.target.value)\n                }}>\n                </input>\n\n\n                <button className=\"SendButton\" style={{fontFamily:\"Cochin\",borderRadius: '10px',opacity:'0.8',backgroundColor:'rgba(255, 255, 255, 0.5);'}} onClick={()=>{\n                    console.log(\"Send\")\n                    if (!chat_socket) { console.log(\"error\"); return }\n                    chat_socket.send(JSON.stringify({\n                        'message': text\n                    }));\n                }}>Send</button>\n            </div> \n        </div>\n    )\n}\n\nexport default ChatBar","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Shop/Shop.js",["70","71","72","73","74","75","76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":51,"column":39,"nodeType":"87","messageId":"88","endLine":51,"endColumn":49},{"ruleId":"89","severity":1,"message":"90","line":253,"column":25,"nodeType":"83","messageId":"91","endLine":253,"endColumn":26},{"ruleId":"92","severity":1,"message":"93","line":254,"column":30,"nodeType":"94","messageId":"88","endLine":254,"endColumn":32},{"ruleId":"92","severity":1,"message":"93","line":268,"column":30,"nodeType":"94","messageId":"88","endLine":268,"endColumn":32},{"ruleId":"92","severity":1,"message":"93","line":282,"column":30,"nodeType":"94","messageId":"88","endLine":282,"endColumn":32},{"ruleId":"92","severity":1,"message":"93","line":285,"column":30,"nodeType":"94","messageId":"88","endLine":285,"endColumn":32},{"ruleId":"81","severity":1,"message":"95","line":345,"column":15,"nodeType":"83","messageId":"84","endLine":345,"endColumn":20},{"ruleId":"92","severity":1,"message":"93","line":572,"column":56,"nodeType":"94","messageId":"88","endLine":572,"endColumn":58},{"ruleId":"96","severity":1,"message":"97","line":617,"column":7,"nodeType":"98","endLine":617,"endColumn":21,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":637,"column":7,"nodeType":"98","endLine":637,"endColumn":14,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"102","line":649,"column":7,"nodeType":"98","endLine":649,"endColumn":17,"suggestions":"103"},{"ruleId":"81","severity":1,"message":"104","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":19},{"ruleId":"81","severity":1,"message":"105","line":12,"column":10,"nodeType":"83","messageId":"84","endLine":12,"endColumn":15},{"ruleId":"81","severity":1,"message":"106","line":12,"column":17,"nodeType":"83","messageId":"84","endLine":12,"endColumn":25},{"ruleId":"81","severity":1,"message":"107","line":1,"column":19,"nodeType":"83","messageId":"84","endLine":1,"endColumn":24},{"ruleId":"108","severity":1,"message":"109","line":13,"column":8,"nodeType":"110","messageId":"111","endLine":13,"endColumn":38},{"ruleId":"81","severity":1,"message":"112","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"96","severity":1,"message":"113","line":18,"column":7,"nodeType":"98","endLine":18,"endColumn":9,"suggestions":"114"},{"ruleId":"92","severity":1,"message":"93","line":27,"column":56,"nodeType":"94","messageId":"88","endLine":27,"endColumn":58},{"ruleId":"81","severity":1,"message":"107","line":1,"column":10,"nodeType":"83","messageId":"84","endLine":1,"endColumn":15},{"ruleId":"81","severity":1,"message":"115","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":23},{"ruleId":"81","severity":1,"message":"82","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":13},{"ruleId":"81","severity":1,"message":"116","line":29,"column":11,"nodeType":"83","messageId":"84","endLine":29,"endColumn":22},{"ruleId":"81","severity":1,"message":"117","line":45,"column":11,"nodeType":"83","messageId":"84","endLine":45,"endColumn":27},{"ruleId":"118","severity":2,"message":"119","line":50,"column":24,"nodeType":"83","messageId":"120","endLine":50,"endColumn":29},{"ruleId":"118","severity":2,"message":"121","line":51,"column":22,"nodeType":"83","messageId":"120","endLine":51,"endColumn":25},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'API' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'fontFamily'.","ObjectExpression","unexpected","no-redeclare","'e' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'remap' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'newCamera'. Either include it or remove the dependency array.","ArrayExpression",["124"],"React Hook React.useEffect has missing dependencies: 'animate', 'initSocket', 'loadBase', 'loadFBX', 'loadSky', 'loadVRM', and 'newLight'. Either include them or remove the dependency array.",["125"],"React Hook React.useEffect has a missing dependency: 'initHolistic'. Either include it or remove the dependency array.",["126"],"'getCookie' is defined but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'Input' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'useEffect' is defined but never used.","React Hook React.useEffect has a missing dependency: 'initSocket'. Either include it or remove the dependency array.",["127"],"'Button' is defined but never used.","'getMineList' is assigned a value but never used.","'uploadAvatarList' is assigned a value but never used.","no-undef","'title' is not defined.","undef","'src' is not defined.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [newCamera, videoElement]",{"range":"136","text":"137"},"Update the dependencies array to be: [animate, initSocket, loadBase, loadFBX, loadSky, loadVRM, newLight, scene]",{"range":"138","text":"139"},"Update the dependencies array to be: [holistic, initHolistic]",{"range":"140","text":"141"},"Update the dependencies array to be: [initSocket]",{"range":"142","text":"143"},[22248,22262],"[newCamera, videoElement]",[22712,22719],"[animate, initSocket, loadBase, loadFBX, loadSky, loadVRM, newLight, scene]",[23065,23075],"[holistic, initHolistic]",[251,253],"[initSocket]"]
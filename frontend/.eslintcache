[{"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/index.js":"1","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/reportWebVitals.js":"2","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/App.js":"3","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRooms/ChatRooms.js":"4","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatRoom.js":"5","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Sign/Sign.js":"6","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/Login.js":"7","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/cookie.js":"8","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatBar.js":"9"},{"size":505,"mtime":1650102695497,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1650102695497,"results":"12","hashOfConfig":"11"},{"size":904,"mtime":1650102695393,"results":"13","hashOfConfig":"11"},{"size":10367,"mtime":1650211477198,"results":"14","hashOfConfig":"11"},{"size":20445,"mtime":1650207347489,"results":"15","hashOfConfig":"11"},{"size":3454,"mtime":1650198042589,"results":"16","hashOfConfig":"11"},{"size":2813,"mtime":1650201529410,"results":"17","hashOfConfig":"11"},{"size":658,"mtime":1650102695437,"results":"18","hashOfConfig":"11"},{"size":2942,"mtime":1650187604323,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1nmmsgo",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/index.js",[],["42","43"],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/reportWebVitals.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/App.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRooms/ChatRooms.js",["44","45","46","47","48","49","50"],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatRoom.js",["51","52","53","54","55","56","57","58","59","60"],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Sign/Sign.js",["61","62"],"import { Input, Button, message } from 'antd'\nimport React from 'react'\nimport { API } from '../../App'\nimport { setCookie } from '../Login/cookie'\n\nimport './Sign.css'\n\nvar Sign = () =>{\n    \n    var [Username, setUsername] = React.useState()\n    var [SignPassword, setSignPassword] = React.useState()\n    var [SignPasswordConfir, setSignPasswordConfir] = React.useState()\n\n    const sign = () =>{\n        if(SignPassword===SignPasswordConfir){\n            let bodydata = {\n                username: Username,\n                password: SignPassword,\n            }\n            setCookie(\"update\",new Date().toUTCString())\n            fetch(`/user/sign/`,{\n                method:'POST',\n                body: JSON.stringify(bodydata),\n            })\n            .then(response=>{\n                if (response.status===200) {\n                    message.success(\"Sussessfully Sign! Return Login pagr to Login\")\n                    setTimeout(() => {\n                        window.location.href=\"/login\"\n                    }, 1000);\n                }else if (response.status===403){\n                    message.warn(\"Sign Fail! Try Again\")\n                }else{\n                    message.warn(\"Unknown Error! Try Again!\") \n                }\n            })\n        }\n        else{\n            message.warn(\"Inconsistent Password!\")\n            setTimeout(() => {\n                window.location.reload()\n            }, 2000);\n        }\n    }\n\n    return(\n        <div className='Sign'>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n                <div style={{\n                    \"fontSize\":\"calc(4vh + 25px)\", color:\"white\", fontFamily:\"Georgia\",\n                    marginTop:\"10vh\", fontFamily:\"Cochin\"\n                }}>Sign up</div>\n                <div>\n                    <form className='Sign-form'>\n                        <div className='Sign-form-username'>\n                            <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Username</div>\n                            <Input style={{\"height\":\"2rem\"}} id='username' type=\"text\" value={Username} onChange={e=>setUsername(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-password'>\n                            <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Password</div>\n                            <Input style={{\"height\":\"2rem\"}} id='password' type=\"password\" value={SignPassword} onChange={e=>setSignPassword(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-passwordConfir'>\n                            <div style={{textAlign:\"left\", fontFamily:\"Cochin\"}}>Confirm Password</div>\n                            <Input style={{\"height\":\"2rem\"}} id='passwordConfir' type=\"password\" value={SignPasswordConfir} onChange={e=>setSignPasswordConfir(e.target.value)}/>\n                        </div>\n                        <div className='Sign-form-submit'>\n                            <Button style={{cursor:\"pointer\", fontFamily:\"Cochin\"}} id='submit' type=\"button\" onClick={sign}>Sign up</Button>\n                        </div>\n                        <div className='Sign-Sign-in'>\n                            <a href=\"/login\" style={{color:\"blueviolet\", fontFamily:\"Cochin\"}}><u>Sign in ChatVerse</u></a>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Sign","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/Login.js",[],"/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/Login/cookie.js",["63"],"export function setCookie(name,value)\n{\n    var Days = 30;\n    var exp = new Date();\n    exp.setTime(exp.getTime() + Days*24*60*60*1000);\n    document.cookie = name + \"=\"+ escape (value) + \";path=/;expires=\" + exp.toGMTString();\n}\n\nexport function getCookie(name)\n{\n    var arr,reg=new RegExp(\"(^| )\"+name+\"=([^;]*)(;|$)\");\n \n    if(arr=document.cookie.match(reg))\n \n        return unescape(arr[2]);\n    else\n        return null;\n}\n\nexport function delCookie(name)\n{\n    var exp = new Date();\n    exp.setTime(exp.getTime() - 1);\n    var cval=getCookie(name);\n    if(cval!=null)\n        document.cookie= name + \"=\"+cval+\";path=/;expires=\"+exp.toGMTString();\n}","/Users/vito/Assignment/CSC4001/Project/chat_verse/frontend/src/app/components/ChatRoom/ChatBar.js",["64","65","66"],"import React, { useEffect } from \"react\";\nimport \"./ChatBar.css\"\n\nvar idx_max = 0\n\nvar chat_socket = null;\n\nvar timeout\n\nconst ChatBar = () => {\n\n    const [ text, setText ] = React.useState(\"\")\n\n\n\n    React.useEffect(()=>{\n        initSocket()\n    },[])\n\n    const [ messages, setMessages ] = React.useState([])\n\n    const initSocket = () => {\n        // 从 URL Params 获取 roon name\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const roomName = urlParams.get('roomname');\n        const wss_protocol = (window.location.protocol == 'https:') ? 'wss://': 'ws://';\n        chat_socket = new WebSocket(\n            wss_protocol + window.location.host + '/ws/chat/'  + roomName + '/'\n        );\n\n        console.log(wss_protocol + window.location.host + '/ws/chat/'  + roomName + '/')\n        // 建立webchat_socket连接时触发此方法\n        chat_socket.onopen = function(e) {\n            // Do nothing\n        }\n\n        // 从后台接收到数据时触发此方法\n        chat_socket.onmessage = function(e) {\n            const data = JSON.parse(e.data);\n            console.log(messages)\n            \n            \n            setMessages(messages => {\n                let msgs = messages.map(m=>m)\n                msgs.push({...data, idx:idx_max})\n                if(msgs.length>5){\n                    msgs = msgs.slice(1)\n                }\n                return msgs\n            })\n            idx_max += 1\n            \n            if(timeout) clearTimeout(timeout)\n            timeout = setTimeout(()=>{\n                setMessages([])\n                clearTimeout(timeout)\n            },5000,idx_max) // 5秒后全部消息消失\n            \n        };\n        \n    }\n\n    // const removeMsg = (idx) => {\n    //     let msgs = []\n    //     messages.forEach(m=>{if(idx===m.idx)msgs.push(m)})\n    //     setMessages(msgs)\n    // }\n\n\n    return (\n        <div className=\"ChatBar\">\n            <div className=\"ChatBar-messages\">\n                {messages.map(m=>(\n                    <div key={Math.random()} className=\"ChatBar-message\">\n                        {m.idx}: {m.message}\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"ChatBar-actions\">\n                <input placeholder=\"Massage\" style={{fontFamily:\"Cochin\", borderRadius: '10px'}} value={text} onChange={e=>{\n                    setText(e.target.value)\n                }}>\n                </input>\n\n\n                <button className=\"SendButton\" style={{fontFamily:\"Cochin\",borderRadius: '10px'}} onClick={()=>{\n                    console.log(\"Send\")\n                    if (!chat_socket) { console.log(\"error\"); return }\n                    chat_socket.send(JSON.stringify({\n                        'message': text\n                    }));\n                }}>Send</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatBar",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":19,"nodeType":"73","messageId":"74","endLine":1,"endColumn":24},{"ruleId":"71","severity":1,"message":"75","line":9,"column":13,"nodeType":"73","messageId":"74","endLine":9,"endColumn":26},{"ruleId":"71","severity":1,"message":"76","line":9,"column":28,"nodeType":"73","messageId":"74","endLine":9,"endColumn":44},{"ruleId":"71","severity":1,"message":"77","line":10,"column":12,"nodeType":"73","messageId":"74","endLine":10,"endColumn":24},{"ruleId":"71","severity":1,"message":"78","line":10,"column":26,"nodeType":"73","messageId":"74","endLine":10,"endColumn":41},{"ruleId":"71","severity":1,"message":"79","line":79,"column":11,"nodeType":"73","messageId":"74","endLine":79,"endColumn":26},{"ruleId":"71","severity":1,"message":"80","line":100,"column":11,"nodeType":"73","messageId":"74","endLine":100,"endColumn":25},{"ruleId":"81","severity":1,"message":"82","line":173,"column":25,"nodeType":"73","messageId":"83","endLine":173,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":174,"column":30,"nodeType":"86","messageId":"87","endLine":174,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":188,"column":30,"nodeType":"86","messageId":"87","endLine":188,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":202,"column":30,"nodeType":"86","messageId":"87","endLine":202,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":205,"column":30,"nodeType":"86","messageId":"87","endLine":205,"endColumn":32},{"ruleId":"71","severity":1,"message":"88","line":265,"column":15,"nodeType":"73","messageId":"74","endLine":265,"endColumn":20},{"ruleId":"84","severity":1,"message":"85","line":492,"column":56,"nodeType":"86","messageId":"87","endLine":492,"endColumn":58},{"ruleId":"89","severity":1,"message":"90","line":537,"column":7,"nodeType":"91","endLine":537,"endColumn":21,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":554,"column":7,"nodeType":"91","endLine":554,"endColumn":14,"suggestions":"94"},{"ruleId":"89","severity":1,"message":"95","line":566,"column":7,"nodeType":"91","endLine":566,"endColumn":17,"suggestions":"96"},{"ruleId":"71","severity":1,"message":"97","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":13},{"ruleId":"98","severity":1,"message":"99","line":51,"column":39,"nodeType":"100","messageId":"87","endLine":51,"endColumn":49},{"ruleId":"101","severity":1,"message":"102","line":13,"column":8,"nodeType":"103","messageId":"104","endLine":13,"endColumn":38},{"ruleId":"71","severity":1,"message":"105","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"106","line":18,"column":7,"nodeType":"91","endLine":18,"endColumn":9,"suggestions":"107"},{"ruleId":"84","severity":1,"message":"85","line":27,"column":56,"nodeType":"86","messageId":"87","endLine":27,"endColumn":58},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'existRoomName' is assigned a value but never used.","'setExistRoomName' is assigned a value but never used.","'selectAVerse' is assigned a value but never used.","'setSelectAVerse' is assigned a value but never used.","'Manage_my_Verse' is assigned a value but never used.","'Select_a_Verse' is assigned a value but never used.","no-redeclare","'e' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'remap' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'newCamera'. Either include it or remove the dependency array.","ArrayExpression",["110"],"React Hook React.useEffect has missing dependencies: 'animate', 'initSocket', 'loadVRM', and 'newLight'. Either include them or remove the dependency array.",["111"],"React Hook React.useEffect has a missing dependency: 'initHolistic'. Either include it or remove the dependency array.",["112"],"'API' is defined but never used.","no-dupe-keys","Duplicate key 'fontFamily'.","ObjectExpression","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'useEffect' is defined but never used.","React Hook React.useEffect has a missing dependency: 'initSocket'. Either include it or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [newCamera, videoElement]",{"range":"122","text":"123"},"Update the dependencies array to be: [animate, initSocket, loadVRM, newLight, scene]",{"range":"124","text":"125"},"Update the dependencies array to be: [holistic, initHolistic]",{"range":"126","text":"127"},"Update the dependencies array to be: [initSocket]",{"range":"128","text":"129"},[19092,19106],"[newCamera, videoElement]",[19489,19496],"[animate, initSocket, loadVRM, newLight, scene]",[19842,19852],"[holistic, initHolistic]",[251,253],"[initSocket]"]